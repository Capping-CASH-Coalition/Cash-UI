{"version":3,"sources":["webpack:///./src/app/pages/openEndedData/openEndedData.module.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/pages/openEndedData/openEndedData.component.ts","webpack:///./src/app/pages/openEndedData/filter.pipe.ts","webpack:///./src/app/pages/openEndedData/filterQuestionType.pipe.ts","webpack:///./src/app/pages/openEndedData/openEndedData.routes.ts","webpack:///./src/app/pages/openEndedData/openEndedData.component.css","webpack:///./src/app/pages/openEndedData/openEndedData.component.html"],"names":[],"mappings":"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","file":"1.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { OpenEndedDataComponent } from \"./openEndedData.component\";\nimport { openEndedDataRoutes } from \"./openEndedData.routes\";\nimport { FilterPipe } from './filter.pipe';\nimport { FilterByQuestionTypePipe } from './filterQuestionType.pipe'\nimport { Globals } from '../../globals';\n\n@NgModule({\n  imports: [\n      CommonModule,\n      FormsModule,\n      RouterModule.forChild(openEndedDataRoutes)\n  ],\n  declarations: [\n    OpenEndedDataComponent,\n    FilterPipe,\n    FilterByQuestionTypePipe\n  ],\n  providers: [\n   Globals\n ]\n})\nexport class OpenEndedDataModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/openEndedData/openEndedData.module.ts","import { Injectable } from '@angular/core';\nimport { SurveyService } from '../app/survey.service';\n\n@Injectable()\nexport class Globals {\n    public version: number = 1;\n    public yearCreated: Date = new Date(2018);\n    public surveyTakenId: number;\n    public name: string = \"Questionnaire_Test\";\n    public questions: Array<any> = [ {question_id: 1, question_num: 1, question_text: \"What services do you need?\", question_type: \"checkbox\"},\n                                     {question_id: 2, question_num: 2, question_text: \"What city are you from?\", question_type: \"select\"},\n                                     {question_id: 3, question_num: 3, question_text: \"Additional comments:\", question_type: \"text\"},\n                                     {question_id: 4, question_num: 4, question_text: \"How can this survey be better?\", question_type: \"text\"},\n                                     {question_id: 5, question_num: 5, question_text: \"In a few words, describe capping:\", question_type: \"text\"}];\n\n    public options: Array<any> = [  {question_id: 1, option_num: 1, option_text: \"CASH\", option_id: 1},\n                                    {question_id: 1, option_num: 2, option_text: \"Dress for success\", option_id: 2},\n                                    {question_id: 1, option_num: 3, option_text: \"Food Pantry\", option_id: 3},\n                                    {question_id: 2, option_num: 1, option_text: \"Hyde Park\", option_id: 4},\n                                    {question_id: 2, option_num: 2, option_text: \"Poughkeepsie\", option_id: 5},\n                                    {question_id: 2, option_num: 3, option_text: \"Wappingers\", option_id: 6},\n                                    { question_id: 3, option_num: 1, option_text: \"Response:\", option_id: 7 }];\n\n  public responses: Array<any> =   [{ question_id: 1, question_num: 1, question_text: \"What services do you need?\", question_is_active: \"true\", question_type: \"checkbox\", option_id: 1, option_num: 1, option_text: \"money\", option_is_active: \"true\" },\n                                    { question_id: 2, question_num: 2, question_text: \"What city are you from?\", question_type: \"select\", option_id: 2, option_num: 1, option_text: \"Beacon\", option_is_active: \"true\" },\n                                    { question_id: 3, question_num: 3, question_text: \"Additional comments:\", question_type: \"text\", option_id: 3, option_num: 1, option_text: \"nope\", option_is_active: \"true\" },\n                                    { question_id: 4, question_num: 4, question_text: \"How can this survey be better?\", question_type: \"text\", option_id: 4, option_num: 1, option_text: \"by being over\", option_is_active: \"true\" },\n                                    { question_id: 5, question_num: 5, question_text: \"In a few words, describe capping:\", question_type: \"text\", option_id: 5, option_num: 1, option_text: \"a class you must take to graduate and gain experience\", option_is_active: \"true\" }];\n\n    personId: number;\n    yearTaken: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n\n\n    public questionResponseData: Array<any> = this.getQuestionResponseData();\n\n\n    private getQuestionResponseData(): Array<any> {\n      let questionResponseDataReturn: Array<any> = [];\n      this.questions.forEach(question => {\n         let data = { question_id: 0, question_type: '', question_text: '', responses: [] };\n         data.question_id = question.question_id;\n         data.question_text = question.question_text;\n         data.question_type = question.question_type;\n         this.responses.forEach(response => {\n            if ( question.question_id === response.question_id ) {\n               data.responses.push(response.response_text);\n            };\n         })\n         questionResponseDataReturn.push(data);\n      });\n      return questionResponseDataReturn;\n    }\n\n\n\n    /*\n    ~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~\n\n    constructor(private surveyService: SurveyService) {\n\n\n        this.surveyService.getQuestions().subscribe((response)=>{\n            this.questions = [];\n            console.log('response is ', response);\n            for (let i = 0; i < response.length; i++) {\n            if (response[i].survey_version == 1) {\n                this.version = 1;\n                let qArray =\n                {\"question_num\": response[i].question_num,\n                \"question_id\": response[i].question_id,\n                \"question_text\": response[i].question_text,\n                \"question_type\": response[i].question_type}\n                ;\n                this.questions.push(qArray);\n            }\n            }\n            console.log(this.questions);\n            this.surveyService.getOptions().subscribe((response)=>{\n            this.options = [];\n            console.log('response is ', response);\n            for (let i = 0; i < this.questions.length; i++) {\n                console.log(response[i]);\n                for (let j = 0; j < response.length; j++) {\n                if (response[j].question_id == this.questions[i].question_id) {\n                    let rArray = [\n                    {\"option_id\": response[i].option_id,\n                    \"option_num\": response[i].option_num,\n                    \"option_text\": response[i].option_text}\n                    ];\n                    this.options.push(rArray);\n                }\n                }\n            }\n            //console.log(this.options);\n            },(error) => {\n                console.log('error is ', error)\n            })\n        },(error) => {\n            console.log('error is ', error)\n        })\n     }\n     ~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~~DONT DELETE~~~~~~~~~\n     */\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/globals.ts","import { Component, OnInit } from '@angular/core';\nimport { Globals } from \"../../globals\"\n\n\n@Component({\n    selector: 'app-openEndedData',\n    styleUrls: ['./openEndedData.component.css'],\n    templateUrl: './openEndedData.component.html',\n})\nexport class OpenEndedDataComponent implements OnInit {\n   \n   constructor(private globals: Globals) {}\n\n   dataFeed: string[];\n\n   ngOnInit() {\n    this.dataFeed = this.globals.questionResponseData[0].responses;\n   }\n\n   updateDataFeed(currQuestion: string): void {\n      this.globals.questionResponseData.forEach(question => {\n         if (question.question_text === currQuestion) {\n            this.dataFeed = question.responses;\n         }     \n      })\n   }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/openEndedData/openEndedData.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n\n   transform(items: any[], searchText: string): any[] {\n\n      if (!items) return [];\n\n      if (!searchText) return items;\n\n      searchText = searchText.toLowerCase();\n\n      return items.filter(it => {\n         return it.toLowerCase().includes(searchText);\n      });\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/openEndedData/filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filterByQuestionType'\n})\n\nexport class FilterByQuestionTypePipe implements PipeTransform {\n\n    transform(questions : any, type: string): any[] {\n        if (questions) {\n            return questions.filter((question: any) => question.question_type === type);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/openEndedData/filterQuestionType.pipe.ts","import { OpenEndedDataComponent } from \"./openEndedData.component\";\n\nexport const openEndedDataRoutes=[\n    {\n        path:'',\n        component:OpenEndedDataComponent\n    },\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/openEndedData/openEndedData.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".divVisuals {\\n   margin-top: 30px;\\n}\\n\\n.divSearchRow {\\n   margin-top: 10px;\\n}\\n\\n.stylish-input-group .input-group-addon{\\n   background: white !important; \\n}\\n.stylish-input-group .form-control{\\n  border-right:0; \\n  box-shadow:0 0 0; \\n  border-color:#ccc;\\n}\\n.stylish-input-group button{\\n   border:0;\\n   background:transparent;\\n}\\n\\n.divTableResponses {\\n   display: block;\\n   height: 480px;\\n   overflow-y: scroll;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/openEndedData/openEndedData.component.css\n// module id = 443\n// module chunks = 1","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n         <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleFormControlSelect1\\\">Select Question to Get Responses From</label>\\n            <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" (change)=\\\"updateDataFeed($event.target.value)\\\">\\n               <option *ngFor=\\\"let data of globals.questionResponseData | filterByQuestionType: 'text' \\\">\\n                  {{ data.question_text }}   \\n               </option>\\n                  \\n            </select>\\n         </div>\\n      </div>\\n   </div>\\n   <div class=\\\"row divSearchRow\\\">\\n      <div class=\\\"col-lg-6\\\">\\n         <div class=\\\"input-group\\\">\\n            <input   type=\\\"text\\\" \\n                     class=\\\"form-control\\\"\\n                     [(ngModel)]=\\\"searchText\\\" \\n                     placeholder=\\\"Filter Data Feed\\\">\\n            <div class=\\\"input-group-btn\\\">\\n               <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                  <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n               </button>\\n            </div>\\n         </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n         <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Export Current Data Feed</button>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n         <button type=\\\"button\\\" class=\\\"btn btn-info\\\">Export Word Cloud</button>\\n      </div>\\n   </div>\\n\\n   <div class=\\\"row divVisuals\\\">\\n      <div class=\\\"col-lg-6 divTableResponses\\\"> \\n\\n         <table id=\\\"tableResponses\\\" class=\\\"table table-hover\\\">\\n            <thead>\\n               <tr>\\n                  <th>Responses</th>\\n               </tr>\\n            </thead>\\n            <tbody>\\n               <tr *ngFor=\\\"let response of dataFeed | filter : searchText\\\">\\n                  <td>{{ response }}</td>\\n               </tr>\\n            </tbody>\\n         </table>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n            <canvas id=\\\"wordcloudCanvas\\\" width=\\\"480\\\" height=\\\"480\\\"></canvas>\\n      </div>\\n   </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/openEndedData/openEndedData.component.html\n// module id = 450\n// module chunks = 1"],"sourceRoot":""}