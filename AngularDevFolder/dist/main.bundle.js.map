{"version":3,"sources":["webpack:///./src/app/services/survey.service.ts","webpack:///./src/app/pages/edit/edit.component.ts","webpack:///./src/app/pages/exportRaw/exportRaw.component.ts","webpack:///./src/app/pages/graphs/graphs.component.ts","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/input/input.component.ts","webpack:///./src/app/pages/not-found/not-found.component.ts","webpack:///./src/app/pages/survey/survey.component.ts","webpack:///./src/app/services/graph.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.helpers.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/components/topnavbar/topnavbar.component.ts","webpack:///./src/app/pipes/exceptQuestionId.pipe.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/pipes/filterByDate.pipe.ts","webpack:///./src/app/pipes/filterByOptionActive.pipe.ts","webpack:///./src/app/pipes/filterByQuestionActive.pipe.ts","webpack:///./src/app/pipes/filterQuestionId.pipe.ts","webpack:///./src/app/pipes/filterSurvey.pipe.ts","webpack:///./src/app/pipes/graphableQuestion.pipe.ts","webpack:///./src/app/pipes/keys.pipe.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/topnavbar/topnavbar.component.css","webpack:///./src/app/pages/edit/edit.component.css","webpack:///./src/app/pages/exportRaw/exportRaw.component.css","webpack:///./src/app/pages/graphs/graphs.component.css","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/input/input.component.css","webpack:///./src/app/pages/not-found/not-found.component.css","webpack:///./src/app/pages/survey/survey.component.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/topnavbar/topnavbar.component.html","webpack:///./src/app/pages/edit/edit.component.html","webpack:///./src/app/pages/exportRaw/exportRaw.component.html","webpack:///./src/app/pages/graphs/graphs.component.html","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/input/input.component.html","webpack:///./src/app/pages/not-found/not-found.component.html","webpack:///./src/app/pages/survey/survey.component.html","webpack:///./src/app/services/authentication.service.ts"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtQA,oD;;;;;;;ACAA,mjBAAmjB,4BAA4B,4KAA4K,8BAA8B,4LAA4L,6BAA6B,mMAAmM,iCAAiC,+LAA+L,4BAA4B,0L;;;;;;;ACAj7C,qlB;;;;;;;ACAA,gvBAAgvB,iBAAiB,+6BAA+6B,4JAA4J,MAAM,65CAA65C,i8CAAi8C,6jDAA6jD,gtB;;;;;;;ACA7uM,soBAAsoB,kBAAkB,2BAA2B,sBAAsB,whBAAwhB,wBAAwB,2BAA2B,yBAAyB,yUAAyU,cAAc,6gDAA6gD,qBAAqB,mCAAmC,qBAAqB,qDAAqD,iBAAiB,8J;;;;;;;ACApyG,q2CAAq2C,YAAY,4YAA4Y,oBAAoB,ugBAAugB,wBAAwB,wqBAAwqB,wBAAwB,yaAAya,yOAAyO,oBAAoB,41B;;;;;;;ACAtpH,8uBAA8uB,WAAW,wIAAwI,WAAW,8FAA8F,kBAAkB,+J;;;;;;;ACA5/B,iqBAAiqB,iBAAiB,gmBAAgmB,uJAAuJ,OAAO,sCAAsC,0BAA0B,4aAA4a,sBAAsB,ghBAAghB,sBAAsB,yuBAAyuB,sBAAsB,yW;;;;;;;ACAvtG,wR;;;;;;;ACAA,k0BAAk0B,wBAAwB,KAAK,0BAA0B,kyBAAkyB,+OAA+O,sBAAsB,iGAAiG,wBAAwB,IAAI,yBAAyB,isBAAisB,kBAAkB,qCAAqC,sBAAsB,yoBAAyoB,kBAAkB,mCAAmC,sBAAsB,ogCAAogC,kBAAkB,mCAAmC,sBAAsB,+nBAA+nB,cAAc,kWAAkW,iBAAiB,cAAc,iMAAiM,iBAAiB,cAAc,wVAAwV,uOAAuO,gBAAgB,sU;;;;;;;;;;;;;;;;;;;;;;;;ACAz3M;AACF;AACN;AACY;AAE9C,MAAc,CAAC,MAAM,GAAG,MAAM,CAAC;AAGhC,IAAa,qBAAqB;IAwBhC,+BAAoB,MAAc;QAAlC,iBAYC;QAZmB,WAAM,GAAN,MAAM,CAAQ;QAvBlC,kCAAkC;QAClC,iBAAY,GAAG;YACX,KAAK,EAAE;gBACH,YAAY,EAAE,SAAS;aAC1B;YACD,IAAI,EAAE;gBACJ,WAAW,EAAE,4BAA4B;gBACzC,YAAY,EAAE,gBAAgB;gBAC9B,QAAQ,EAAE,wCAAwC;gBAClD,MAAM,EAAE;oBACN,KAAK,EAAE,sBAAsB;iBAC9B;aACF;YACD,SAAS,EAAE,IAAI;YACf,cAAc,EAAE,IAAI;SACvB,CAAC;QAEF,SAAI,GAAG,IAAI,kDAAS,CAChB,kCAAkC,EAClC,uBAAuB,EACvB,IAAI,CAAC,YAAY,CACpB,CAAC;QAGA,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,UAAe;YAC1C,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,OAAO;gBACzD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACV,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;gBAED,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gBAClD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iEAAiE;IACjE,qCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,iEAAiE;IACjE,sCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACnC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,iDAAiD;IACjD,+CAAe,GAAf;QACE,MAAM,CAAC,oFAAe,EAAE,CAAC;IAC3B,CAAC;IACH,4BAAC;AAAD,CAAC;AAtDY,qBAAqB;IADjC,gFAAU,EAAE;yDAyBiB,+DAAM,oBAAN,+DAAM;GAxBvB,qBAAqB,CAsDjC;AAtDiC","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpHeaders } from '@angular/common/http'\n\n// Http specifc header that is needed to post data to the database\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n\n@Injectable()\nexport class SurveyService {\n\n  // Instantiates the HttpClient class\n  constructor(private http: HttpClient) { }\n\n  // Function that will call the index.js route to get all active surveys\n  getSurveys() {\n    return this.http.get<any>('http://localhost:3000/api/surveys');\n  }\n  \n  // Function that will call the index.js route to get all questions given a specific survey_id as a parameter\n  getSurveyQuestions(survey_id) {\n    return this.http.get<any>('http://localhost:3000/api/surveyQuestions/' + survey_id);\n  }\n  \n  // Function that will call the index.js route to get all options given a specific survey_id as a parameter\n  getSurveyOptions(survey_id) {\n    return this.http.get<any>('http://localhost:3000/api/surveyOptions/' + survey_id);\n  }\n  \n  // Function that will call the index.js route to get all responses given a specific survey_id as a parameter\n  getSurveyResponses(survey_id) {\n    return this.http.get<any>('http://localhost:3000/api/surveyResponses/' + survey_id);\n  }\n  \n  // Function that will call the index.js post an individual survey response to a survey given a specific survey_id as a parameter\n  postSurveyResponse(response) {\n    return this.http.post<any>('http://localhost:3000/api/postSurveyResponse', JSON.stringify(response), httpOptions);\n  }\n\n  // Function that will call the index.js route to update a questions give the specific updates\n  updateSurveyQuestions(updates) {\n    return this.http.post<any>('http://localhost:3000/api/updateSurveyQuestions', updates);\n  }\n  \n  postSurveyID(survey_name) {\n    return this.http.post<any>('http://localhost:3000/api/postSurveyID', survey_name, httpOptions);\n  }\n  \n  getSurveyID() {\n    return this.http.get<any>('http://localhost:3000/api/getSurveyID');\n  }\n  \n  postQuestionID(question) {\n    return this.http.post<any>('http://localhost:3000/api/postQuestionID', question, httpOptions);\n  }\n  \n  getQuestionLength() {\n    return this.http.get<any>('http://localhost:3000/api/getQuestionLength');\n  }\n  \n  getOptionLength() {\n    return this.http.get<any>('http://localhost:3000/api/getOptionLength');\n  }\n  \n  getSurveyLength() {\n    return this.http.get<any>('http://localhost:3000/api/getSurveyLength');\n  }\n  \n  postOptionID(option) {\n    return this.http.post<any>('http://localhost:3000/api/postOptionID', option, httpOptions);\n  }\n\n  getOptionID() {\n    return this.http.get<any>('http://localhost:3000/api/getOptionID');\n  }\n\n  postArchitectures(surveyComponent) {\n    return this.http.post<any>('http://localhost:3000/api/postArchitectures', surveyComponent, httpOptions);\n  }\n\n  updateSurveyQuestion(question) {\n    return this.http.put<any>('http://localhost:3000/api/updateSurveyQuestion', question, httpOptions);\n  }\n\n  updateSurveyOption(option) {\n    return this.http.put<any>('http://localhost:3000/api/updateSurveyOption', option, httpOptions);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/survey.service.ts","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Globals } from \"../../globals\" \n\n@Component({\n   selector: 'app-edit',\n   templateUrl: './edit.component.html',\n   styleUrls: ['./edit.component.css']\n})\n\nexport class EditComponent implements OnInit {\n\n   // declare the survey form group holding all the values for the form\n   survey: FormGroup;\n   // used to determine if the survey name is readonly or not\n   nameReadOnly: boolean;\n\n   constructor(\n      private _fb: FormBuilder,\n      public globals: Globals\n   ) { };\n\n   // initilaize a new blank survey form\n   ngOnInit() {\n      this.newSurveyForm();\n   }\n   \n   // sets the survey name to readonly based on the edit global\n   setReadOnly(): boolean {\n      return this.nameReadOnly;\n   }\n\n   // sets the survey form to a blank survey\n   newSurveyForm() {\n      this.survey = this._fb.group({\n         surveyName: new FormControl(''),\n         questions: this._fb.array([\n            this.initQuestion(),\n         ])\n      });\n      this.nameReadOnly = false;\n      jQuery(\"#surveySelect\").val(-1);\n   }  \n\n   // Used to update the formgroup from a given survey id\n   updateSurveyFormData(survey_id) {\n      let currSurvey;\n      this.nameReadOnly = true;\n      // loop through the surveys and set the current one to the one that mathches the id\n      this.globals.surveys.forEach(s => {\n         currSurvey = s.survey_id == survey_id ? s : currSurvey;\n      });\n      // populate the survey form with proper data\n      this.survey = this._fb.group({\n         surveyName: new FormControl(currSurvey.survey_name),\n         questions: this._fb.array([])\n      });\n      // patch the questions nested array value with the new questions\n      this.patchFormQuestions(currSurvey.questions);\n   }\n\n   // used to update the questions of the form group qustions array\n   patchFormQuestions(questions: any[]) {\n      const control = <FormArray>this.survey.controls['questions'];\n      questions.forEach(q => {\n         if (q.question_active) {\n            control.push(this._fb.group({\n               questionText: new FormControl(q.question_text),\n               questionType: new FormControl(q.question_type),\n               questionOptions: this.patchFormOptions(q.options)\n            }));\n         }\n      });\n   }\n\n   // used to update the options of the nested form group options array\n   patchFormOptions(options) {\n      let ops = new FormArray([]);\n      options.forEach(o => {\n         ops.push(this._fb.group({\n            option: new FormControl(o.option_text)\n         }));\n      });\n      return ops;\n   }\n\n   // create a new blank question\n   initQuestion() {\n      return this._fb.group({\n         questionText: new FormControl(''),\n         questionType: new FormControl(''),\n         questionOptions: this._fb.array([\n            this.initOption(),\n         ])\n      });\n   }\n\n   // create a new blank option\n   initOption() {\n      return this._fb.group({\n         option: new FormControl('')\n      })\n   }\n\n   // add question to the form group array at the given index\n   addQuestion(idx: number) {\n      const control = <FormArray>this.survey.controls['questions'];\n      control.insert(idx + 1, this.initQuestion());\n   }\n\n   // remove question from the form group array at the given index\n   removeQuestion(idx: number) {\n      const control = <FormArray>this.survey.controls['questions'];\n      control.removeAt(idx);\n   }\n\n   // add option to the form group array at the given index\n   addOption(question): void {\n      const control = <FormArray>question.controls.questionOptions;\n      control.push(this.initOption());\n   }\n\n   // remove option from the form group array at the given index\n   removeOption(question, j: number) {\n      const control = <FormArray>question.controls.questionOptions;\n      control.removeAt(j);\n   }\n\n   // checks the question type and returns boolean to display the options div\n   showOptionsDiv(question): boolean {\n      const questionType = <FormArray>question.controls.questionType.value;\n      let ret: boolean;\n      switch (questionType.toString()) {\n         case \"dropdown\":\n            ret = true;\n            break;\n         case \"checkboxes\":\n            ret = true;\n            break;\n         case \"mc\":\n            ret = true;\n            break;\n         case \"text\":\n            ret = false;\n            break;\n         default:\n            ret = true;\n      }\n      return ret;\n   }\n\n   save(formData) {\n      console.log(formData.value);\n   }\n\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/edit/edit.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Globals } from '../../globals';\n\n@Component({\n   selector: 'app-exportRaw',\n   styleUrls: ['./exportRaw.component.css'],\n   templateUrl: './exportRaw.component.html',\n})\nexport class ExportRawComponent implements OnInit {\n   \n   constructor(public globals: Globals) {}\n\n   // datafeed that the table uses to populate data\n   dataFeed: any[];\n   // set the current survey and the date to filter by\n   currSurvey: any;\n   dateFilter: Date;\n\n   ngOnInit() {\n      // set the current survey to the first survey in the  globals\n      this.currSurvey = this.globals.surveys[0];\n      // update the date value select to be the date created of the survey\n      this.updateDate(this.currSurvey.date_created);\n      // set the data feed to -1 which is all questions\n      this.updateDataFeed(-1);\n   }\n\n   // set the date filter global from the survey\n   updateDate(date) {\n      this.dateFilter = date;\n   }\n\n   // set the current survey from the given id \n   updateSurvey(id) {\n      this.currSurvey = this.globals.surveys[id];\n      // get questions from the current survey\n      this.getQuestions();\n      // update feed to -1 which is all questions\n      this.updateDataFeed(-1);\n   }\n\n   // get all the questions of th current survey, filtering out the inactive ones\n   getQuestions(): string[] {\n      return this.currSurvey.questions.filter(\n         (question: any) =>\n            question.question_active === true);\n   }\n\n   // updates the datafeed from a given question\n   updateDataFeed(question_id: number) {\n      // clear the datafeed.\n      this.dataFeed = [];\n      // if the question = -1 then get all questions from the survey\n      if (question_id == -1) {\n         this.currSurvey.questions.forEach(question => {\n            if (question.question_active) {\n               question.responses.forEach(response => {\n                  this.dataFeed.push({\n                     question: question.question_text,\n                     question_id: question.question_id,\n                     response: response.response_text,\n                     date: response.date_taken\n                  })\n               });\n            }\n         });\n      }\n      // otherwise, get get the responses from the given question id\n      else {\n         this.currSurvey.questions.forEach(question => {\n            if (question.question_id == question_id) {\n               question.responses.forEach(response => {\n                  this.dataFeed.push({\n                     question: question.question_text,\n                     question_id: question.question_id,\n                     response: response.response_text,\n                     date: response.date_taken\n                  })\n               });\n            }\n         });\n      }\n   }\n\n   // download the feed table as a CSV\n   downloadCSV(csv) {\n      let csvFile;\n      let downloadLink;\n      // CSV file\n      csvFile = new Blob([csv], { type: \"text/csv\" });\n      // Download link\n      downloadLink = document.createElement(\"a\");\n      // File name\n      downloadLink.download = this.currSurvey.survey_name;\n      // Create a link to the file\n      downloadLink.href = window.URL.createObjectURL(csvFile);\n      // Hide download link\n      downloadLink.style.display = \"none\";\n      // Add the link to DOM\n      document.body.appendChild(downloadLink);\n      // Click download link\n      downloadLink.click();\n   }\n\n   // export the table to format for download\n   exportTableToCSV() {\n      let csv = [];\n      let rows = document.querySelectorAll(\"table tr\");\n\n      for (let i = 0; i < rows.length; i++) {\n         let row = [], cols = rows[i].querySelectorAll(\"td, th\");\n         for (let j = 0; j < cols.length; j++)\n            row.push(cols[j].innerHTML);\n         csv.push(row.join(\",\"));\n      }\n      // Download CSV file\n      this.downloadCSV(csv.join(\"\\n\"));\n   }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/exportRaw/exportRaw.component.ts","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { GraphService } from '../../services/graph.service'\nimport { Globals } from '../../globals';\n\n@Component({\n   selector: 'app-graphs',\n   templateUrl: './graphs.component.html',\n   styleUrls: ['./graphs.component.css']\n})\n\nexport class GraphsComponent implements AfterViewInit, OnInit {\n\n   constructor(\n      public graphService: GraphService,\n      public globals: Globals,\n\n      private fb: FormBuilder,\n   ) { };\n\n   // global to track which switch for the dataset\n   currentDatasetType: string = 'single';\n   // form for the chart filters\n   chartForm: FormGroup;\n   // sub form specifically for the matrix options\n   optionsForm: FormGroup;\n   // canvas id holder\n   canvas: any;\n   // canvas context\n   ctx: any;\n   // chart object\n   chart: Chart = null;\n   // contains the selected options\n   selectedOptions: string[];\n\n   ngOnInit() {\n      // init the chart form\n      this.initChartForm();\n      // init the options form\n      this.initOptionsForm();\n      // grab the updated selected options\n      this.updateSelectedOptions();\n   }\n\n   // after the HTML has loaded, init graph elements\n   ngAfterViewInit() {\n      this.canvas = document.getElementById('graphCanvas');\n      this.ctx = this.canvas.getContext('2d');\n      this.updateChart();\n   };\n\n   // init chart form\n   initChartForm() {\n      this.chartForm = this.fb.group({\n         chartType: new FormControl('pie'),\n         surveyId: new FormControl('0'),\n         questionId: new FormControl('0'),\n         subQuestionId: new FormControl('1')\n      });\n   }\n\n   // set the single state button to disabled or not disabled\n   buttonStateSingle(): boolean {\n      return this.currentDatasetType == 'single' ? true : false;\n   }\n   // set the multiple state button to disabled or not disabled\n   buttonStateMultiple(): boolean {\n      return this.currentDatasetType == 'multiple' ? true : false;\n   }\n   // init the options with the subquestion id appropiately \n   initOptionsForm() {\n      const controls = this.getSubQuestionOptions().map(o => new FormControl(false));\n      controls[0].setValue(true); // Set the first checkbox to true (checked)\n      this.optionsForm = this.fb.group({\n         options: new FormArray(controls)\n      });\n   }\n\n   // map the dataset for an individual dataset graph\n   mapSingleData(): Map<string, number> {\n      let map = new Map();\n      let survey = this.globals.surveys[this.chartForm.controls.surveyId.value];\n      survey.questions.forEach(question => {\n         // for each question, if the question id equals the one in the select value\n         if (question.question_id == this.chartForm.controls.questionId.value) {\n            // for each response of the question\n            question.responses.forEach(r => {\n               // if the dataset has the response text/answer: get the count and increase and set back\n               if (map.has(r.response_text)) {\n                  let count = map.get(r.response_text);\n                  // increment count by 1\n                  count += 1;\n                  map.set(r.response_text, count);\n               }\n               // if the dataset does not have the response, it is the first time seeing it so set with value of 1\n               else {\n                  map.set(r.response_text, 1);\n               }\n            });\n         }\n      });\n      return map;\n   }\n\n   // used when a change happens to update the chart\n   updateChart(): void {\n      // if the switch is on single, destroy the chart, get the new data, build it using graph service\n      if (this.currentDatasetType === 'single') {\n         let map: Map<string, number>;\n         this.destroyChart();\n         map = this.mapSingleData();\n         this.buildChart(this.graphService.createSingleChart(this.ctx, this.chartForm.controls.chartType.value, map));\n      }\n      // if the switch is on multiple, destroy the chart, create new Chart from graph service, build it\n      else {\n         this.updateSelectedOptions();\n         console.log(\"Matrix selected\");\n         this.destroyChart();\n         let c: Chart = this.graphService.createMatrixChart(this.ctx, this.chartForm.controls.chartType.value, this.matrixGraphData())\n         this.buildChart(c)\n\n      }\n   }\n\n\n   mapTopLevelFilter(): Map<string, string> {\n      let responseMap: Map<string, string> = new Map();\n      this.globals.surveys[this.chartForm.controls.surveyId.value].questions.forEach(q => {\n         if ( q.question_id == this.chartForm.controls.questionId.value ) {\n            q.responses.map( r => responseMap.set(r.hash_id, r.response_text));\n         }\n      });\n      return responseMap;\n   }\n\n   /** Matrix label map */\n   initMatrixLabelsMap() : Map<string, number> {\n      let labelMap: Map<string, number> = new Map();\n      this.globals.surveys[this.chartForm.controls.surveyId.value].questions.forEach(q => {\n         if ( q.question_id == this.chartForm.controls.questionId.value ) {\n            // on every option, if the option is active, add to the label map, if not active then nothing happens\n            q.options.map( o => o.option_active ? labelMap.set(o.option_text, 0) : null);\n         }\n      });\n      return labelMap;\n   }\n\n\n   mapMatrixDataSets(): any[] {\n      let questionMap: Map<string, string> = this.mapTopLevelFilter();\n      let datasets: any[] = new Array();\n      // go through the checkboxes that are selected\n      this.selectedOptions.forEach((o, index) => {\n         // dsMap contains all the top question options labels with values 0\n         let dsMap = this.initMatrixLabelsMap();\n         // Sub question responses loop\n         this.globals.surveys[this.chartForm.controls.surveyId.value].questions.forEach(sq => {\n            if (sq.question_id == this.chartForm.controls.subQuestionId.value) {\n               // loop through all the sub question responses\n               sq.responses.forEach(r => {\n                  // question map has hash id key of this response\n                  if (questionMap.has(r.hash_id)) {\n                     // key for new 'map'\n                     let k = questionMap.get(r.hash_id);\n                     // if the resonse text equals the option then it coorelates\n                     if (r.response_text == o) {\n                        // make sure that the dataset map has the key\n                        if (dsMap.has(k)) {\n                           // get count in dataset map\n                           let count = dsMap.get(k);\n                           // increment count of coorelated data by 1\n                           count += 1;\n                           // set new count\n                           dsMap.set(k, count);\n                        }\n                     }\n                  } \n               });\n            }\n         });\n         // push the dataset values\n         datasets.push({\n            label: o,\n            data: Array.from(dsMap.values()),\n            backgroundColor: this.graphService.getColorByIndex(index)\n         })\n      });\n      return datasets;\n   }\n\n   // pulls together the above functions to set the labels and datasets for the matrix graph\n   matrixGraphData(): any {\n      return {\n         labels: Array.from(this.initMatrixLabelsMap().keys()),\n         datasets: this.mapMatrixDataSets()\n      }\n   }\n\n   // update the dataset switch to single or multiple\n   updateMultipleDataSetForm(val) {\n      this.currentDatasetType = val;\n   }\n\n   // get the options of the sub questions with active options\n   getSubQuestionOptions(): any[] {\n      let sid: number = this.chartForm.controls.surveyId.value;\n      let qid: number = this.chartForm.controls.subQuestionId.value;\n      let opsReturn;\n      this.globals.surveys[sid].questions.forEach(q => {\n         if (q.question_id == qid) {\n            opsReturn = q.options\n               .filter((option: any) => option.option_active === true);\n         }\n      });\n      return opsReturn;\n   }\n\n   // build the chart from the Chart data and update it on the canvas\n   private buildChart(chartData: Chart): void {\n      this.chart = chartData;\n      this.chart.update();\n   }\n\n   // destroy the chart if it is not null\n   private destroyChart(): void {\n      if (this.chart != null) {\n         this.chart.destroy();\n      }\n   }\n\n   // use graph service to download the chart given an event\n   download(event) {\n      this.graphService.downloadChart(event, 'canvas');\n   }\n\n   // update the selected options to only be the checked ones\n   updateSelectedOptions() {\n      const options = this.getSubQuestionOptions()\n      this.selectedOptions = this.optionsForm.value.options\n         .map((v, i) => v ? options[i].option_text : null)\n         .filter(v => v !== null);\n   }\n\n\n   graphOptionsModal(): void {\n      jQuery('#myModal').on('shown.bs.modal', function () {\n         jQuery('#myInput').trigger('focus')\n       })\n   }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/graphs/graphs.component.ts","import { OnInit, Component } from \"@angular/core\";\nimport { Globals } from \"../../globals\";\n\n@Component({\n   selector: 'home',\n   templateUrl: './home.component.html',\n   styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n   constructor(\n      public globals: Globals\n   ) { };\n\n   ngOnInit() {\n   }\n\n   // go through the surveys and get the info for the survey details card\n   /*\n   getSurveyInfo(): any[] {\n      let surveyDetails: any[] = [];\n      this.globals.surveys.forEach(survey => {\n         let submissionCount = 0;\n         // get the number of responses on each question of the survey\n         survey.questions.map(q => { submissionCount += q.responses.length });\n         // push details to array\n         surveyDetails.push({\n            name: survey.survey_name,\n            date: survey.date_created,\n            status: survey.is_active,\n            // round down the operation of the the total submissions divided by the number of questions, parse to string for formatting\n            submissions: Math.round(submissionCount / survey.questions.length).toLocaleString(),\n         })\n      });\n      return surveyDetails;\n   }\n*/\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Globals } from '../../globals';\nimport { FormBuilder, FormGroup, FormArray, FormControl, FormControlName } from '@angular/forms';\n\n@Component({\n   selector: 'app-input',\n   templateUrl: './input.component.html',\n   styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n   \n   constructor(public globals: Globals) { };\n\n   survey;\n\n   ngOnInit() {\n      this.survey = this.globals.surveys[0];\n   }\n   \n   updateSurvey(sid){\n      this.survey = this.globals.surveys[sid];\n      console.log(this.survey);\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/input/input.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/not-found/not-found.component.ts","//import { Globals } from './../../globals';\nimport { Component, ChangeDetectionStrategy, DoCheck, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { PaginationInstance } from 'ngx-pagination';\nimport { SurveyService } from '../../services/survey.service';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Survey } from '../../models/survey.model';\nimport { Question } from '../../models/question.model';\nimport { Response } from '../../models/response.model';\nimport { Option } from '../../models/option.model';\nimport { SurveyInfo } from 'app/models/surveyInfo.model';\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SurveyService]\n})\n\nexport class SurveyComponent implements OnInit, DoCheck {\n  // Declare the imports to be used within the component\n  constructor(public surveyService: SurveyService,\n              public auth: AuthenticationService,\n              private changeref: ChangeDetectorRef) { }\n\n  /* \n      Variables for the Survey Component\n  */\n\n  // Survey variables set by surveySelect()\n  selectedSurveyId: number;\n  selectedSurveyIndex: number;\n  // Shows the landing introduction when true\n  showLanding: boolean = true;\n  // Holds the dynamic survey variables for display\n  surveys: Array<any> = [];\n  // Set by optionSelect()\n  selectedOption: number;\n  // Fills when multiple choices are selected by updateResponses()\n  radioChoices: Array<any> = [];\n  // Pushes/pops when user selects next or previous\n  surveyData: Array<any> = [];\n  // Pagination element uses this\n  public config: PaginationInstance = {\n    id: 'custom',\n    itemsPerPage: 1,\n    currentPage: 1\n  };\n\n  /*\n      Survey Landing/Home page functions\n  */\n\n  // This continuously checks if the user is authenticated\n  ngDoCheck(): void {\n    // If authenticated, redirect to the home dashboard\n    if (!this.auth.isAuthenticated) {\n      //this.router.navigate(['home']);\n    }\n  }\n\n  // On component initialization, get the survey ids, names, and date created\n  ngOnInit(): void {\n    this.surveyService.getSurveys().subscribe((response) => {\n        // Get 1 survey at a time and push into surveys array\n        for (let i = 0; i < response.length; i++) {\n          let survey: SurveyInfo = {\n                \"survey_id\": response[i].survey_id,\n                \"survey_name\": response[i].survey_name,\n                \"date_created\": response[i].date_created,\n                \"survey_is_active\": response[i].survey_is_active\n          };\n\n          this.surveys.push(survey);\n          console.log(this.surveys);\n          // Manually detect changes as the page will load faster than the async call\n          this.changeref.detectChanges();\n        }\n    }, (error) => {\n      console.log('error is ', error)\n      })\n  }\n\n  // When a user clicks a survey in the dropdown, save the selectedSurveyId\n  surveySelect($event, value) {\n    this.selectedSurveyId = value;\n    for (let i = 0; i < this.surveys.length; i++) {\n      if (this.selectedSurveyId == this.surveys[i].survey_id) {\n        this.selectedSurveyIndex = i;\n      }\n    }\n    console.log(this.selectedSurveyId);\n  }\n\n  // When the user clicks start, get the survey questions and options based on the survey id\n  onStart(): void {\n    console.log(\"showLanding before start: \" + this.showLanding);\n    this.showLanding = false;\n    console.log(\"showLanding after start: \" + this.showLanding);\n    this.surveyService.getSurveyQuestions(this.selectedSurveyId).subscribe((response)=>{\n      // Initialize the questions\n      this.surveys[this.selectedSurveyIndex].questions = [];\n      // Iterate through the questions and push them one at a time\n      for (let i = 0; i < response.length; i++) {\n        let question: Question = {\n              \"question_id\": response[i].question_id,\n              \"question_text\": response[i].question_text,\n              \"question_type\": response[i].question_type,\n              \"question_is_active\": response[i].question_is_active,\n              options: []\n        };\n        this.surveys[this.selectedSurveyIndex].questions.push(question);\n        this.changeref.detectChanges();\n      }\n      // Manually detect changes as the page will load faster than the async call\n      this.changeref.detectChanges();\n      \n      // Get the survey options based on the selectedSurveyId\n      this.surveyService.getSurveyOptions(this.selectedSurveyId).subscribe((response) => {\n\n        for (let j = 0; j < this.surveys[this.selectedSurveyIndex].questions.length; j++) {\n          for (let k = 0; k < response.length; k++) {\n            let option: Option = {\n                  \"option_id\": response[k].option_id,\n                  \"option_text\": response[k].option_text,\n                  \"option_is_active\": response[k].option_is_active,\n                  \"question_id\": response[k].question_id\n            };\n            // If the question IDs match, push the option into the questions[j].options array\n            //console.log(\"Questions[j].qid: \" + this.surveys[this.selectedSurveyIndex].questions[j].question_id);\n            if (this.surveys[this.selectedSurveyIndex].questions[j].question_id == response[k].question_id) {\n              this.surveys[this.selectedSurveyIndex].questions[j].options.push(option);\n              console.log(\"Options after push: \" + this.surveys[this.selectedSurveyIndex].questions[j].options[0]);\n              console.log(\"Options after push: \" + this.surveys[this.selectedSurveyIndex].questions[j].options[0].option_text);\n            }\n          }\n          this.changeref.detectChanges();\n        }\n        // Manually detect changes as the page will load faster than the async call\n        this.changeref.detectChanges();\n      }, (error) => {\n        console.log('error is ', error)\n      }) \n    },(error) => {\n      console.log('error is ', error)\n    })\n  }\n\n  /*\n      Survey Functions\n  */\n\n  // When submit button is hit, this will post the survey data to the database\n  postOnSubmit() {\n    // For each response in surveyData, post the surveyData[index] response object\n    for (let i = 0; i < this.surveyData.length; i++) {\n      this.surveyService.postSurveyResponse(this.surveyData[i]).subscribe((response)=>{\n        let responses = [];\n        //console.log('response is ', response);\n        for (let i = 0; i < response.length; i++) {\n           \n          let choice: Response = {\n                \"question_id\": response[i].question_id,\n                \"survey_id\": response[i].survey_id,\n                \"option_id\": response[i].option_id,\n                \"response_text\": response[i].response_text\n          };\n          responses.push(choice);\n          console.log(responses);\n        }\n        \n      },(error) => {\n          console.log('error is ', error)\n      })\n    } \n  }\n\n  // When next button is clicked, save the selected options to the survey data object\n  updateResponses(textValue: string, questionIndex: number) {\n    // Response object mirrors the database response table\n    let response: Response = {\n          survey_id: 0,\n          question_id: 0,\n          option_id: 0,\n          response_text: \"\"\n    };\n    \n    // If question type is dropdown or multiple choice, only need to add 1 response\n    if (this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_type == \"dropdown\" ||\n        this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_type == \"mc\") {\n          response.survey_id = this.selectedSurveyId; // Survey ID\n          response.question_id = this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_id; // Question ID\n          response.option_id = this.selectedOption; // Option ID\n          response.response_text = this.getResponseText(this.selectedOption, questionIndex); // Response text\n          // Push to survey data array\n          this.surveyData.push(response);\n    // If question type is checkbox, check for multiple responses\n    } else if (this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_type == \"checkboxes\") {\n      // Iterate through the options that were selected\n      for (let i = 0; i < this.radioChoices.length; i++) {\n        // Initialize response to prevent duplication\n        response = { \n          survey_id: 0,\n          question_id: 0,\n          option_id: 0,\n          response_text: \"\"\n        };\n\n        response.survey_id = this.selectedSurveyId; // Survey ID\n        response.question_id = this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_id; // Question ID\n        response.option_id = this.radioChoices[i]; // Option ID\n        response.response_text = this.getResponseText(this.radioChoices[i], questionIndex); // Response text\n        console.log(\"pushing to surveyData: \" + this.radioChoices[i]);\n        // Push to survey data array\n        this.surveyData.push(response);\n        console.log(\"survey data after push: \" + this.surveyData[i])\n      }\n    // If question type is text (open-ended), set option id to 1\n    } else if (this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_type == \"text\") {\n      response.survey_id = this.selectedSurveyId; // Survey ID\n      response.question_id = this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_id; // Question ID\n      response.option_id = 1; // Option ID\n      response.response_text = textValue; // Response text\n\n      //console.log(textValue);\n      this.surveyData.push(response);\n    }\n    console.log(this.surveyData);\n  }\n\n  // This is called to find the selected options within the HTML\n  optionSelect(event, value, questionType): void {\n    // If question type is dropdown or multiple choice, there is only 1 selected value\n    if (questionType == \"dropdown\" || questionType == \"mc\") {\n      this.selectedOption = value;\n    // If question type is checkbox, there is 1+ options\n    } else if (questionType == \"cb\") {\n      // event is the clicked HTML element\n      if (event) {\n        // If checked, add it to the radioChoice array\n        if (event.target.checked) {\n          this.radioChoices.push(value);\n        // If unchecked, remove it from the radioChoice array\n        } else {\n          // Iterate through the radio choices to see which matches the value\n          for (let i = 0; i < this.radioChoices.length; i++) {\n            // If it matches, remove it from radioChoice array\n            if (this.radioChoices[i] == value) {\n              this.radioChoices.splice(i, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getResponseText(optionId, questionIndex) {\n    // Iterate through the question's options\n    for (let option of this.surveys[this.selectedSurveyIndex].questions[questionIndex].options) {\n      if (this.selectedOption == option.option_id) {\n        return option.option_text;\n      } else if (optionId == option.option_id)\n        return option.option_text;\n    }\n  }\n\n  // Gets called\n  getQuestionIndex(questionId) {\n    for (let i = 0; i < this.surveys[this.selectedSurveyIndex].questions.length; i++) {\n      if (questionId == this.surveys[this.selectedSurveyIndex].questions[i].question_id) {\n        return i;\n      }\n    };\n  }\n\n  // Gets called when previous button is clicked\n  removeResponse(questionIndex: number, currentPage: number) {\n    if (this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_type == \"checkboxes\") {\n      // Pop 1 for each response in surveyData that matches the current question ID\n      for (let i = this.surveyData.length - 1; i > 0; i--) {\n        if (this.surveyData[i].question_id == this.surveys[this.selectedSurveyIndex].questions[questionIndex].question_id) {\n          this.surveyData.pop();\n        }\n      }\n      console.log(this.surveyData);\n    // If question type is text (open-ended), multiple choice, or dropdown/select, pop 1\n    } else {\n      this.surveyData.pop();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/survey/survey.component.ts","import { Injectable } from '@angular/core';\nimport { ChartColor } from 'chart.js';\nimport { Chart } from 'chart.js';\n\n@Injectable()\nexport class GraphService {\n\n   private graphTypes: any[] = [\n      {val: 'pie', view: 'Pie' },\n      {val: 'bar', view: 'Bar' },\n      {val: 'doughnut', view: 'Doughnut' },\n      {val: 'polarArea', view: 'Polar Area' },\n      {val: 'line', view: 'Line' },\n      {val: 'radar', view: 'Radar' },\n   ]\n\n   private colors: string[] = [\n      'rgba(054, 162, 235, 1)',\n      'rgba(255, 099, 132, 1)',\n      'rgba(255, 206, 086, 1)',\n      'rgba(075, 192, 192, 1)',\n      'rgba(153, 102, 255, 1)',\n      'rgba(255, 159, 064, 1)',\n      'rgba(046, 139, 087, 1)',\n      'rgba(082, 139, 139, 1)',\n      'rgba(070, 130, 180, 1)',\n      'rgba(147, 112, 219, 1)',\n      'rgba(205, 092, 092, 1)',\n      'rgba(219, 112, 219, 1)',\n      'rgba(255, 231, 186, 1)',\n      'rgba(178, 223, 238, 1)',\n      'rgba(072, 209, 204, 1)',\n      'rgba(238, 180, 180, 1)',\n      'rgba(153, 050, 204, 1)',\n      'rgba(102, 205, 170, 1)',\n      'rgba(230, 238, 000, 1)',\n      'rgba(255, 193, 037, 1)',\n      'rgba(000, 178, 238, 1)',\n      'rgba(255, 159, 064, 1)',\n      'rgba(230, 207, 161, 1)',\n      'rgba(205, 197, 191, 1)',\n      'rgba(202, 255, 112, 1)',\n      'rgba(255, 127, 080, 1)',\n      'rgba(205, 051, 051, 1)',\n      'rgba(255, 127, 000, 1)',\n      'rgba(255, 174, 185, 1)'\n   ]\n\n   private linearChartOptions = {\n      responsive: false,\n      scales: {\n         yAxes: [{\n             ticks: {\n                 beginAtZero: true\n             }\n         }]\n     }\n   }\n\n   private radialChartOptions = {\n      responsive: false,\n   }\n\n   public createSingleChart(context, chartType, map: Map<string, number>): Chart {\n      return new Chart(context, {\n         type: chartType,\n         data: {\n            labels: Array.from(map.keys()),\n            datasets: [{\n               label: 'Total',\n               data: Array.from(map.values()),\n               backgroundColor: this.getColors()\n            }]\n         },\n         options: this.getOptions(chartType)\n      });\n   }\n\n   public createMatrixChart(context, chartType, matrixData ): Chart {\n      return new Chart(context, {\n         type: chartType,\n         data: matrixData,\n         options: this.getOptions(chartType)\n      })\n   }\n\n   public getGraphTypes(): any[] {\n      return this.graphTypes;\n   }\n\n   public getColors(): string[] {\n      return this.colors;\n   }\n\n   public getColorByIndex(i: number): string {\n      if ( i > this.colors.length ) {\n         console.log(\"color out of bounds\");\n         return null;\n      }\n      else {\n         return this.colors[i];\n      }\n   }\n\n   public getOptions(chartType): any {\n      if ( chartType == 'bar' || chartType == 'line' )\n         return this.linearChartOptions;\n      else \n         return this.radialChartOptions;  \n   }\n\n   public downloadChart(event, canvas) {\n      let anchor = event.target;\n      let can = document.getElementsByTagName(canvas)[0] as HTMLCanvasElement;\n      anchor.href = can.toDataURL(\"image/png\");\n      anchor.download = \"Graph.png\";\n   }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/graph.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 389;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 389\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));  // Added by Survey builder. be cautious\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport { SurveyService } from './services/survey.service';\nimport { Globals } from   './globals';\n\n\n\nvar Responses: Array<any> = [{ survey_id: 1, question_id: 1, option_id: 1, response_text: \"OMFG DUDE\" },\n{ survey_id: 1, question_id: 1, option_id: 2, response_text: \"Support clients/assist in identifying and accessing services\" },\n{ survey_id: 1, question_id: 1, option_id: 2, response_text: \"Support clients/assist in identifying and accessing services\" },\n{ survey_id: 1, question_id: 1, option_id: 2, response_text: \"Support clients/assist in identifying and accessing services\" },\n{ survey_id: 1, question_id: 1, option_id: 2, response_text: \"Support clients/assist in identifying and accessing services\" }];\n\nvar Surveys: Array<any> = [{ survey_id: 2, question_id: 1, question_num: 1, question_text: \"What services do you need?\", question_is_active: \"true\", question_type: \"checkbox\", option_id: 1, option_num: 1, option_text: \"money\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 2, question_num: 2, question_text: \"What city are you from?\", question_type: \"select\", option_id: 2, option_num: 1, option_text: \"Beacon\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 3, question_num: 3, question_text: \"Additional comments:\", question_type: \"text\", option_id: 3, option_num: 1, option_text: \"nope\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 4, question_num: 4, question_text: \"How can this survey be better?\", question_type: \"text\", option_id: 4, option_num: 1, option_text: \"by being over\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 5, question_num: 5, question_text: \"In a few words, describe capping:\", question_type: \"text\", option_id: 5, option_num: 1, option_text: \"a class you must take to graduate and gain experience\", option_is_active: \"true\" }];\n\nvar Updates: Array<any> = [{ survey_id: 2, question_id: 1, question_num: 1, question_text: \"What services do you need?\", question_is_active: \"true\", question_type: \"checkbox\", option_id: 1, option_num: 1, option_text: \"money\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 2, question_num: 2, question_text: \"What city are you from?\", question_type: \"select\", option_id: 2, option_num: 1, option_text: \"Beacon\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 3, question_num: 3, question_text: \"Additional comments:\", question_type: \"text\", option_id: 3, option_num: 1, option_text: \"nope\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 4, question_num: 4, question_text: \"How can this survey be better?\", question_type: \"text\", option_id: 4, option_num: 1, option_text: \"by being over\", option_is_active: \"true\" },\n{ survey_id: 2, question_id: 5, question_num: 5, question_text: \"In a few words, describe capping:\", question_type: \"text\", option_id: 5, option_num: 1, option_text: \"a class you must take to graduate and gain experience\", option_is_active: \"true\" }];\n\nvar FormValues = {\n  SurveyName: \"Lindas Survey\",\n  questions: [\n    {\n      questionText: \"What is your favorite City?\",\n      questionType: \"mc\",\n      questionOptions: [\n        {\n          option: \"New York City\"\n        },\n        {\n          option: \"Boston\"\n        },\n        {\n          option: \"Washington\"\n        },\n        {\n          option: \"Miami\"\n        },\n        {\n          option: \"Poughkeepsie\"\n        }\n      ]\n\n    },\n    {\n      questionText: \"Select the services that ou need: \",\n      questionType: \"checkboxes\",\n      questionOptions: [\n        {\n          option: \"More Money\"\n        },\n        {\n          option: \"More Time\"\n        },\n        {\n          option: \"More Clothes\"\n        },\n        {\n          option: \"Less Capping Work\"\n        }\n      ]\n    }]\n}\n\nvar FormValues1 = {\n  SurveyID: 1,\n  SurveyName: \"Lindas Survey\",\n  questions: [\n    {\n      questionID: 5,\n      questionText: \"What is your favorite City?\",\n      questionIsActive: true,\n      questionType: \"mc\",\n      questionOptions: [\n        {\n          optionID: 5,\n          option: \"New York City\",\n          option_is_active: true\n        },\n        {\n          optionID: 7,\n          option: \"Boston\",\n          option_is_active: true\n        },\n        {\n          optionID: 8,\n          option: \"Washington\",\n          option_is_active: true\n        },\n        {\n          optionID: \"\",\n          option: \"Miami\",\n          option_is_active: true\n        },\n        {\n          optionID: 10,\n          option: \"Poughkeepsie\",\n          option_is_active: true\n        }\n      ]\n\n    },\n    {\n      questionID: \"\",\n      questionText: \"Select the services that ou need: \",\n      questionIsActive: true,\n      questionType: \"checkboxes\",\n      questionOptions: [\n        {\n          optionID: 1,\n          option: \"More Money\",\n          option_is_active: true\n        },\n        {\n          optionID: 2,\n          option: \"More Time\",\n          option_is_active: false\n        },\n        {\n          optionID: 3,\n          option: \"More Clothes\",\n          option_is_active: true\n        },\n        {\n          optionID: \"\",\n          option: \"Less Capping Work\",\n          option_is_active: true\n        }\n      ]\n    }]\n}\nfunction wait(ms): void {\n  var start = new Date().getTime();\n  var end = start;\n  while (end < start + ms) {\n    end = new Date().getTime();\n  }\n}\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [SurveyService]\n})\n\nexport class AppComponent {\n\n\n\n\n  public questions: Array<any>;\n  public results: Array<any>;\n  public options: Array<any>;\n  public responses: Array<any>;\n  public surveys: Array<any>;\n  public updates: Array<any>;\n  questionID;\n  optionID;\n  surveyID;\n  questionNum;\n  constructor(private surveyService: SurveyService,\n    private globals: Globals) { }\n  getSurveys() {\n    this.surveyService.getSurveys().subscribe((response) => {\n      for (let i = 0; i < response.length; i++) {\n        let survey = {\n          \"survey_id\": response[i].survey_id,\n          \"survey_name\": response[i].survey_name,\n          \"date_created\": response[i].date_created\n        };\n        this.globals.surveys.push(survey);\n        console.log(this.globals.surveys);\n      }\n    }, (error) => {\n      console.log('error is ', error)\n    })\n  }\n  getQuestions(id) {\n    this.surveyService.getSurveyQuestions(id).subscribe((response) => {\n\n      for (let j = 0; j < this.globals.surveys.length; j++) {\n        for (let i = 0; i < response.length; i++) {\n\n          let qArray =\n          {\n\n            \"question_id\": response[i].question_id,\n            \"question_text\": response[i].question_text,\n            \"question_type\": response[i].question_type,\n            \"question_is_active\": response[i].question_is_active\n          };\n          if (this.globals.surveys[j].survey_id == id) {\n            this.globals.surveys[j].questions.push(qArray);\n            console.log(this.globals.surveys[j].questions);\n          }\n        }\n      }\n\n    }, (error) => {\n      console.log('error is ', error)\n    })\n  }\n\n  getOptions(id) {\n    this.surveyService.getSurveyOptions(id).subscribe((response) => {\n\n      for (let j = 0; j < this.globals.surveys.length; j++) {\n\n\n        if (this.globals.surveys[j].survey_id == id) {\n\n          for (let k = 0; k < this.globals.surveys[j].questions.length; k++) {\n\n\n            for (let i = 0; i < response.length; i++) {\n\n              let qArray =\n              {\n\n                \"option_id\": response[i].option_id,\n                \"option_text\": response[i].option_text,\n                \"option_is_active\": response[i].option_is_active,\n                \"question_id\": response[i].question_id\n              };\n\n              if (this.globals.surveys[j].questions[k].question_id == response[i].question_id) {\n                this.globals.surveys[j].questions[k].options.push(qArray);\n                console.log(this.globals.surveys[j].questions[k].options);\n              }\n            }\n          }\n        }\n      }\n    }, (error) => {\n      console.log('error is ', error)\n    }) \n  }\n  getResponses(id) {\n    this.surveyService.getSurveyResponses(id).subscribe((response) => {\n\n      for (let j = 0; j < this.globals.surveys.length; j++) {\n\n\n        if (this.globals.surveys[j].survey_id == id) {\n\n          for (let k = 0; k < this.globals.surveys[j].questions.length; k++) {\n\n\n            for (let i = 0; i < response.length; i++) {\n\n              let rArray =\n              {\n\n                \"response_id\": response[i].response_id,\n                \"survey_id\": response[i].survey_id,\n                \"question_id\": response[i].question_id,\n                \"option_id\": response[i].option_id,\n                \"response_text\": response[i].response_text,\n                \"date_taken\": response[i].date_taken\n              };\n\n              if (this.globals.surveys[j].questions[k].question_id == response[i].question_id) {\n                this.globals.surveys[j].questions[k].responses.push(rArray);\n                console.log(this.globals.surveys[j].questions[k].responses);\n              }\n            }\n          }\n        }\n      }\n    }, (error) => {\n      console.log('error is ', error)\n    })\n  }\n  \n\n  ngOnInit() {\n    //this.getSurveys();\n    //this.getQuestions(1);\n    //this.getOptions(1);\n    //this.getResponses(1);\n   \n\n       /*for(let j =0; j<Responses.length; j++){\n       this.surveyService.postSurveyResponse(Responses[j]).subscribe((response)=>{\n           this.responses = [];\n           //console.log('response is ', response);\n           for (let i = 0; i < response.length; i++) {\n              \n             let sArray =\n             {\n               \"question_id\": response[i].question_id,\n               \"survey_id\": response[i].survey_id,\n               \"option_id\": response[i].option_id,\n               \"response_text\": response[i].response_text\n               }\n                 ;\n               this.responses.push(sArray);\n               console.log(this.responses);\n           }\n           \n   },(error) => {\n           console.log('error is ', error)\n       })\n       } \n    this.surveyService.getQuestionLength().subscribe((response) => {\n      this.questionID = response[0];\n      this.surveyService.getOptionLength().subscribe((value) => {\n        this.optionID = value[0];\n        this.surveyService.getSurveyLength().subscribe((data) => {\n          this.surveyID = data[0];\n          this.surveyID = this.surveyID + 1;\n          let insertSurveyID = { \"survey_name\": FormValues.SurveyName };\n          this.surveyService.postSurveyID(insertSurveyID).subscribe((response) => {\n          }, (error) => {\n            console.log('error is ', error)\n          });\n          wait(50);\n          for (let j = 0; j < FormValues.questions.length; j++) {\n            this.questionID = this.questionID + 1;\n            wait(50);\n            let insertQuestionsArray = { \"question_text\": FormValues.questions[j].questionText, \"question_type\": FormValues.questions[j].questionType };\n            wait(50);\n            this.surveyService.postQuestionID(insertQuestionsArray).subscribe((response) => {\n            }, (error) => {\n              console.log('error is ', error)\n            });\n            for (let i = 0; i < FormValues.questions[j].questionOptions.length; i++) {\n              this.optionID = this.optionID + 1;\n              let insertOptionIDArray = { \"option_text\": FormValues.questions[j].questionOptions[i].option, \"question_id\": this.questionID }\n              wait(50);\n              this.surveyService.postOptionID(insertOptionIDArray).subscribe((response) => {\n              }, (error) => {\n                console.log('error is ', error)\n              });\n              let insertArchitecturesArray = { \"survey_id\": this.surveyID, \"question_id\": this.questionID, \"option_id\": this.optionID };\n              wait(50);\n              this.surveyService.postArchitectures(insertArchitecturesArray).subscribe((response) => {\n              }, (error) => {\n                console.log('error is ', error)\n              })\n            }\n          }\n        }, (error) => {\n          console.log('error is ', error)\n        })\n      }, (error) => {\n        console.log('error is ', error)\n      })\n    }, (error) => {\n      console.log('error is ', error)\n    })*/\n\n   /* function f(object: some)\n    this.surveyService.getQuestionLength().subscribe((response) => {\n      this.questionID = response[0];\n\n      this.surveyService.getOptionLength().subscribe((value) => {\n        this.optionID = value[0];\n\n        this.surveyService.getSurveyLength().subscribe((data) => {\n          this.surveyID = data[0];\n          for (let i = 0; FormValues1.questions.length; i++) {\n            if (FormValues1.questions[i].questionID == \"\") {\n              this.questionID = this.questionID + 1;\n              let insertUpdateQuestion = { \"question_text\": FormValues1.questions[i].questionText, \"question_type\": FormValues1.questions[i].questionType };\n              wait(50);\n              this.surveyService.postQuestionID(insertUpdateQuestion).subscribe((response) => {\n              }, (error) => {\n                console.log('error is ', error)\n              });\n              for (let j = 0; FormValues1.questions[i].questionOptions.length; j++) {\n                this.optionID = this.optionID + 1;\n                let insertUpdateOption = { \"option_text\": FormValues1.questions[i].questionOptions[j].option, \"question_id\": this.questionID };\n                this.surveyService.postOptionID(insertUpdateOption).subscribe((response) => {\n                }, (error) => {\n                  console.log('error is ', error)\n                });\n                let insertUpdateArchitectures = { \"survey_id\": FormValues1.SurveyID, \"question_id\": this.questionID, \"option_id\": this.optionID };\n                this.surveyService.postArchitectures(insertUpdateArchitectures).subscribe((response) => {\n                }, (error) => {\n                  console.log('error is ', error)\n                });\n              }\n            }\n            if (FormValues1.questions[i].questionID != \"\") {\n              let updateQuestion = {\n                \"question_id\": FormValues1.questions[i].questionID, \"question_text\": FormValues1.questions[i].questionText, \"question_is_active\": FormValues1.questions[i].questionIsActive, \"question_type\": FormValues1.questions[i].questionType\n              };\n              this.surveyService.updateSurveyQuestion(updateQuestion).subscribe((response) => {\n              }, (error) => {\n                console.log('error is ', error)\n              });\n              for (let j = 0; FormValues1.questions[i].questionOptions.length; j++) {\n                if (FormValues1.questions[i].questionOptions[j].optionID == \"\") {\n                  this.optionID = this.optionID + 1;\n                  let insertOption = { \"option_text\": FormValues1.questions[i].questionOptions[j].option, \"question_id\": FormValues1.questions[i].questionID }; \n                  this.surveyService.postOptionID(insertOption).subscribe((response) => {\n                  }, (error) => {\n                    console.log('error is ', error)\n                  });\n                  let insertArchitectures = {\n                    \"survey_id\": FormValues1.SurveyID, \"question_id\": FormValues1.questions[i].questionID, \"option_id\": this.optionID\n                  }\n                  this.surveyService.postArchitectures(insertArchitectures).subscribe((response) => {\n                  }, (error) => {\n                    console.log('error is ', error)\n                  });\n                }\n                if (FormValues1.questions[i].questionOptions[j].optionID != \"\") {\n                  let insertOption = { \"option_id\": FormValues1.questions[i].questionOptions[j].optionID, \"option_is_active\": FormValues1.questions[i].questionOptions[j].option_is_active };\n                  this.surveyService.updateSurveyOption(insertOption).subscribe((response) => {\n                  }, (error) => {\n                    console.log('error is ', error)\n                  });\n                }\n              }\n            }\n          }\n        }, (error) => {\n          console.log('error is ', error)\n        })\n      }, (error) => {\n        console.log('error is ', error)\n      })\n    }, (error) => {\n      console.log('error is ', error)\n    })*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*for(let j =0; j <Surveys.length; j++){\n    this.surveyService.postSurveyResponses(Su[j]).subscribe((response)=>{\n        this.surveys = [];\n        //console.log('response is ', response);\n        for (let i = 0; i < response.length; i++) {\n    \n            let lArray =\n            {\n            \"question_id\": response[i].question_id,\n              \"question_num\": response[i].question_num,\n              \"question_text\": response[i].question_text,\n            \"question_is_active\": response[i].question_is_active,\n            \"question_type\": response[i].question_type,\n            \"option_id\": response[i].option_id,\n            \"option_num\": response[i].option_num,\n            \"option_text\": response[i].option_text,\n            \"option_is_active\": response[i].option_is_active\n            \n           \n          }\n              ;\n            this.surveys.push(lArray);\n    \n        }\n        console.log(this.surveys);\n    },(error) => {\n        console.log('error is ', error)\n    })\n    }\n    \n        for (let j = 0; j < Updates.length; j++) {\n          if (Updates[j].question_id = '') {\n            this.surveyService.insertSurveyQuestions(Updates[j]).subscribe((response) => {\n              this.updates = [];\n              //console.log('response is ', response);\n              for (let i = 0; i < response.length; i++) {\n    \n                let mArray =\n                {\n                  \"question_num\": response[i].question_num,\n                  \"question_text\": response[i].question_text,\n                  \"question_is_active\": response[i].question_is_active,\n                  \"question_type\": response[i].question_type,\n                  \"option_id\": response[i].option_id,\n                  \"option_num\": response[i].option_num,\n                  \"option_text\": response[i].option_text,\n                  \"option_is_active\": response[i].option_is_active\n                }\n                  ;\n                this.updates.push(mArray);\n    \n              }\n              console.log(this.updates);\n            }, (error) => {\n              console.log('error is ', error)\n            })\n          }\n          if (Updates[j].question_id != '') {\n            this.surveyService.updateSurveyQuestions(Updates[j]).subscribe((response) => {\n              this.updates = [];\n              //console.log('response is ', response);\n              for (let i = 0; i < response.length; i++) {\n    \n                let dArray =\n                {\n                  \"question_id\": response[i].question_id,\n                  \"question_num\": response[i].question_num,\n                  \"question_text\": response[i].question_text,\n                  \"question_is_active\": response[i].question_is_active,\n                  \"question_type\": response[i].question_type,\n                  \"option_id\": response[i].option_id,\n                  \"option_num\": response[i].option_num,\n                  \"option_text\": response[i].option_text,\n                  \"option_is_active\": response[i].option_is_active,\n                  \"response_id\": response[i].response_id,\n                  \"survey_id\": response[i].survey_id\n                }\n                  ;\n                this.updates.push(dArray);\n    \n              }\n              console.log(this.updates);\n            }, (error) => {\n              console.log('error is ', error)\n            })\n          }\n        }*/\n\n\n\n\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/*\n * Inspinia js helpers:\n *\n * correctHeight() - fix the height of main wrapper\n * detectBody() - detect windows size\n * smoothlyMenu() - add smooth fade in/out on navigation show/ide\n *\n*/\n\ndeclare var jQuery:any;\n\nexport function correctHeight() {\n\n    var pageWrapper = jQuery('#page-wrapper');\n    var navbarHeigh = jQuery('nav.navbar-default').height();\n    var wrapperHeigh = pageWrapper.height();\n\n    if (navbarHeigh > wrapperHeigh) {\n        pageWrapper.css(\"min-height\", navbarHeigh + \"px\");\n    }\n\n    if (navbarHeigh < wrapperHeigh) {\n        if (navbarHeigh < jQuery(window).height()) {\n            pageWrapper.css(\"min-height\", jQuery(window).height() + \"px\");\n        } else {\n            pageWrapper.css(\"min-height\", navbarHeigh + \"px\");\n        }\n    }\n\n    if (jQuery('body').hasClass('fixed-nav')) {\n        if (navbarHeigh > wrapperHeigh) {\n            pageWrapper.css(\"min-height\", navbarHeigh + \"px\");\n        } else {\n            pageWrapper.css(\"min-height\", jQuery(window).height() - 60 + \"px\");\n        }\n    }\n}\n\nexport function detectBody() {\n    if (jQuery(document).width() < 769) {\n        jQuery('body').addClass('body-small')\n    } else {\n        jQuery('body').removeClass('body-small')\n    }\n}\n\nexport function smoothlyMenu() {\n    if (!jQuery('body').hasClass('mini-navbar') || jQuery('body').hasClass('body-small')) {\n        // Hide menu in order to smoothly turn on when maximize menu\n        jQuery('#side-menu').hide();\n        // For smoothly turn on menu\n        setTimeout(\n            function () {\n                jQuery('#side-menu').fadeIn(400);\n            }, 200);\n    } else if (jQuery('body').hasClass('fixed-sidebar')) {\n        jQuery('#side-menu').hide();\n        setTimeout(\n            function () {\n                jQuery('#side-menu').fadeIn(400);\n            }, 100);\n    } else {\n        // Remove all inline style from jquery fadeIn function to reset menu state\n        jQuery('#side-menu').removeAttr('style');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.helpers.ts","// Angular/3rd party imports\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Input } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from \"@angular/router\";\nimport { LocationStrategy, HashLocationStrategy, CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n// Component imports\nimport { AppComponent } from './app.component';\nimport { TopnavbarComponent } from \"./components/topnavbar/topnavbar.component\";\nimport { NavigationComponent } from \"./components/navigation/navigation.component\";\nimport { HomeComponent } from \"./pages/home/home.component\";\nimport { GraphsComponent } from \"./pages/graphs/graphs.component\";\nimport { SurveyComponent } from \"./pages/survey/survey.component\";\nimport { InputComponent } from \"./pages/input/input.component\";\nimport { EditComponent } from \"./pages/edit/edit.component\";\nimport { ExportRawComponent } from './pages/exportRaw/exportRaw.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n// Services/Pipes imports\nimport { SurveyService } from './services/survey.service';\nimport { GraphService } from './services/graph.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { KeysPipe } from './pipes/keys.pipe';\nimport { FilterByQuestionIDPipe } from \"./pipes/filterQuestionId.pipe\";\nimport { FilterByOptionActivePipe } from './pipes/filterByOptionActive.pipe';\nimport { FilterByDatePipe } from './pipes/filterByDate.pipe';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { FilterBySurveyIdPipe } from './pipes/filterSurvey.pipe';\nimport { GraphableQuestionPipe } from './pipes/graphableQuestion.pipe';\nimport { ExceptQuestionIdPipe } from './pipes/exceptQuestionId.pipe';\nimport { FilterByQuestionActivePipe } from './pipes/filterByQuestionActive.pipe'\n\n\n// Custom imports\nimport { appRoutes } from \"./app.routes\";\nimport { Globals } from './globals';\n\n\n@NgModule({\n    // Declarations allow all components and pipes to be used through the project\n   declarations: [\n      AppComponent,\n      NavigationComponent,\n      TopnavbarComponent,\n      HomeComponent,\n      EditComponent,\n      ExportRawComponent,\n      GraphsComponent,\n      InputComponent,\n      SurveyComponent,\n      NotFoundComponent,\n      KeysPipe,\n      FilterByOptionActivePipe,\n      FilterByQuestionIDPipe,\n      FilterByDatePipe,\n      FilterPipe,\n      FilterBySurveyIdPipe,\n      GraphableQuestionPipe,\n      ExceptQuestionIdPipe,\n      FilterByQuestionActivePipe, \n   ],\n   // Imports bring in external modules such as core Angular modules\n   imports: [\n      BrowserModule,\n      FormsModule,\n      HttpModule,\n      HttpClientModule,\n      RouterModule.forRoot(appRoutes),\n      ReactiveFormsModule,\n      NgxPaginationModule,\n      CommonModule\n   ],\n   // Providers allow all components to use the given services\n   providers: [\n       SurveyService, \n       GraphService, \n       AuthenticationService, \n       AuthGuardService, \n       Globals, \n       {provide: LocationStrategy, useClass: HashLocationStrategy}\n    ],\n   // Bootstrap is the first component loaded in the project\n   bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { HomeComponent } from \"./pages/home/home.component\";\nimport { GraphsComponent } from './pages/graphs/graphs.component';\nimport { InputComponent } from './pages/input/input.component';\nimport { SurveyComponent } from './pages/survey/survey.component';\nimport { EditComponent } from './pages/edit/edit.component';\nimport { ExportRawComponent } from './pages/exportRaw/exportRaw.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\n\n// path refers to the end of the url after .org such as www.dutchesscap.org/\nexport const appRoutes=[\n    {   // When path is empty, redirect to the home page\n        path:'',\n        redirectTo:'home',\n        pathMatch:'full'\n    },\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    {\n        path: 'graphs',\n        component: GraphsComponent\n        //canActivate: [AuthGuard]\n    },\n    {\n        path: 'input',\n        component: InputComponent,\n    },\n    {\n        path: 'exportRaw',\n        component: ExportRawComponent,\n    },\n    {\n        path: 'edit',\n        component: EditComponent,\n    },\n    {\n        path: 'survey',\n        component: SurveyComponent,\n    },\n    {   // When path does not match one of the declared paths, redirect to 404 page\n        path: '**',\n        component: NotFoundComponent,\n    }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'navigation',\n    templateUrl: './navigation.component.html',\n    styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n    constructor(private router: Router) { }\n\n    ngOnInit() { }\n    activeRoute(routename: string): boolean {\n        return this.router.url.indexOf(routename) > -1;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navigation/navigation.component.ts","import { Component } from '@angular/core';\nimport {smoothlyMenu} from \"../../app.helpers\";\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n    selector: 'topnavbar',\n    templateUrl: './topnavbar.component.html',\n    styleUrls: ['./topnavbar.component.css']\n})\n\nexport class TopnavbarComponent {\n    // Declare the AuthenticationService so that it's available to this component\n    constructor(private auth: AuthenticationService) { }\n    \n    toggleNavigation(): void {\n        jQuery(\"body\").toggleClass(\"mini-navbar\");\n        smoothlyMenu();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/topnavbar/topnavbar.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'ExceptQuestionId'\n})\n\nexport class ExceptQuestionIdPipe implements PipeTransform {\n\n    transform(questions : any, questionId: number ): any[] {\n        if (questions) {\n            return questions.filter((question: any) => question.question_id != questionId);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/exceptQuestionId.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n\n   transform(items: any[], searchText: string): any[] {\n\n      if (!items) return [];\n\n      if (!searchText) return items;\n\n      searchText = searchText.toLowerCase();\n      console.log(searchText);\n      return items.filter(it => {\n         return it.response.toLowerCase().includes(searchText);\n      });\n      \n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filterByDate'\n})\n\nexport class FilterByDatePipe implements PipeTransform {\n\n    transform(responses : any, date: Date): any[] {\n        if (responses) {\n            return responses.filter((response: any) => response.date >= date);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterByDate.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'ActiveOptions'\n})\n\nexport class FilterByOptionActivePipe implements PipeTransform {\n\n    transform(options : any): any[] {\n        if (options) {\n            return options.filter((option: any) => option.option_active === true);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterByOptionActive.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'ActiveQuestions'\n})\n\nexport class FilterByQuestionActivePipe implements PipeTransform {\n\n    transform(questions : any): any[] {\n        if (questions) {\n            return questions.filter((question: any) => question.question_active === true);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterByQuestionActive.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filterByQuestionID'\n})\n\nexport class FilterByQuestionIDPipe implements PipeTransform {\n\n    transform(options : any, questionID: string): any[] {\n        if (options) {\n            return options.filter((option: any) => option.question_id == questionID);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterQuestionId.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'filterBySurveyID'\n})\n\nexport class FilterBySurveyIdPipe implements PipeTransform {\n\n    transform(surveys : any, surveyID: string): any[] {\n        if (surveys) {\n            return surveys.filter((survey: any) => survey.survey_id == surveyID);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterSurvey.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n   name: 'GraphableQuestion'\n})\n\nexport class GraphableQuestionPipe implements PipeTransform {\n\n    transform(questions : any): any[] {\n        if (questions) {\n            return questions.filter((question: any) => question.question_type != 'text');\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/graphableQuestion.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'keys',  pure: false })\n\nexport class KeysPipe implements PipeTransform {\n    \n    transform(value: any, args?: any[]): any[] {\n      // check if \"routes\" exists\n      if(value) {\n        // create instance vars to store keys and final output\n        let keyArr: any[] = Object.keys(value),\n            dataArr = [];\n\n        // loop through the object,\n        // pushing values to the return array\n        keyArr.forEach((key: any) => {\n            dataArr.push(value[key]);\n        });\n        // return the resulting array\n        return dataArr;\n      }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/keys.pipe.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthenticationService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth-guard.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\nimport { SurveyService } from './services/survey.service';\n\n@Injectable()\nexport class Globals {\n\n   public surveys: Array<any> = [\n      {\n         survey_id: 0,\n         survey_name: \"Lindas Survey\",\n         date_created: \"2018-02-13\",\n         questions: [\n            {\n               question_id: 0,\n               question_text: \"What is your favorite color?\",\n               question_type: \"dropdown\",\n               question_active: true,\n               options: [\n                  { option_id: 0, option_text: \"Red\", option_active: true },\n                  { option_id: 1, option_text: \"White\", option_active: true },\n                  { option_id: 2, option_text: \"Pink\", option_active: true },\n                  { option_id: 3, option_text: \"Blue\", option_active: true },\n                  { option_id: 4, option_text: \"Yellow\", option_active: false }\n               ],\n               responses: [\n                  { response_id: 0, response_text: \"Red\", date_taken: \"2018-11-02\"},\n                  { response_id: 1, response_text: \"White\", date_taken: \"2018-11-02\"},\n                  { response_id: 2, response_text: \"Pink\", date_taken: \"2018-11-02\"},\n                  { response_id: 3, response_text: \"Blue\", date_taken: \"2018-11-02\"},\n                  { response_id: 4, response_text: \"White\", date_taken: \"2018-11-02\"},\n                  { response_id: 5, response_text: \"White\", date_taken: \"2018-11-02\"},\n                  { response_id: 6, response_text: \"Yellow\", date_taken: \"2018-11-02\"},\n                  { response_id: 7, response_text: \"Blue\", date_taken: \"2018-11-02\"},\n                  { response_id: 8, response_text: \"Pink\", date_taken: \"2018-11-02\"},\n               ]\n            },\n            {\n               question_id: 1,\n               question_text: \"What is your favorite City?\",\n               question_type: \"mc\",\n               question_active: true,\n               options: [\n                  { option_id: 5, option_text: \"New York City\", option_active: true },\n                  { option_id: 6, option_text: \"Boston\", option_active: true },\n                  { option_id: 7, option_text: \"Washington\", option_active: false },\n                  { option_id: 8, option_text: \"Miami\", option_active: true },\n                  { option_id: 9, option_text: \"Poughkeepsie\", option_active: true }\n               ],\n               responses: [\n                  { response_id: 9, response_text: \"New York City\", date_taken: \"2018-11-02\"},\n                  { response_id: 10, response_text: \"Boston\", date_taken: \"2018-11-02\"},\n                  { response_id: 11, response_text: \"New York City\", date_taken: \"2018-11-02\"},\n                  { response_id: 12, response_text: \"Washington\", date_taken: \"2018-11-02\"},\n                  { response_id: 13, response_text: \"Poughkeepsie\", date_taken: \"2018-11-02\"},\n                  { response_id: 14, response_text: \"Poughkeepsie\", date_taken: \"2018-11-02\"},\n                  { response_id: 15, response_text: \"New York City\", date_taken: \"2018-11-02\"},\n                  { response_id: 16, response_text: \"Miami\", date_taken: \"2018-11-02\"},\n                  { response_id: 17, response_text: \"Boston\", date_taken: \"2018-11-02\"},\n               ]\n            },\n            {\n               question_id: 2,\n               question_text: \"Select the services that you need: \",\n               question_type: \"checkboxes\",\n               question_active: true,\n               options: [\n                  { option_id: 10, option_text: \"More Money\", option_active: false },\n                  { option_id: 11, option_text: \"More Time\", option_active: true },\n                  { option_id: 12, option_text: \"More Clothes\", option_active: true },\n                  { option_id: 13, option_text: \"Less capping work\", option_active: true },\n                  { option_id: 14, option_text: \"Less drinking\", option_active: false }\n               ],\n               responses: [\n                  { response_id: 18, response_text: \"More Time\", date_taken: \"2018-11-02\"},\n                  { response_id: 19, response_text: \"More Time\", date_taken: \"2018-11-02\"},\n                  { response_id: 20, response_text: \"More Money\", date_taken: \"2018-11-02\"},\n                  { response_id: 21, response_text: \"Less drinking\", date_taken: \"2018-11-02\"},\n                  { response_id: 22, response_text: \"Less capping work\", date_taken: \"2018-11-02\"},\n                  { response_id: 23, response_text: \"Less capping work\", date_taken: \"2018-11-02\"},\n                  { response_id: 24, response_text: \"More Money\", date_taken: \"2018-11-02\"},\n                  { response_id: 25, response_text: \"More Clothes\", date_taken: \"2018-11-02\"},\n                  { response_id: 26, response_text: \"Less capping work\", date_taken: \"2018-11-02\"},\n               ]\n            }\n         ]\n      }\n   ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/globals.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#footer {\\n   background-color:white; \\n   text-align: center; \\n   padding: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 585\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navigation/navigation.component.css\n// module id = 586\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/topnavbar/topnavbar.component.css\n// module id = 587\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#btnQuestionAdd {\\n    color: green;\\n }\\n \\n #btnQuestionRemove {\\n    color: #eb494e\\n }\\n \\n a:hover { \\n    background-color: yellow;\\n }\\n \\n .btnBar{\\n    padding-left: 15px;\\n    padding-right: 15px;\\n    padding-top: 15px;\\n }\\n \\n #surveySelect{\\n    width: 300px;\\n }\\n \\n #ctr {\\n    margin-left: 13%;\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/edit/edit.component.css\n// module id = 588\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".colQuestions{\\n   width: 35%\\n}\\n\\n.colResponses{\\n   width: 53%\\n}\\n\\n.colDates{\\n   width: 12%;\\n   text-align: right;\\n}\\n\\n.btnExport{\\n   margin-top: 23px;\\n}\\n\\n.divSearchRow {\\n   margin-bottom: 15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/exportRaw/exportRaw.component.css\n// module id = 589\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".filterBlock {\\n   margin-top: 30px;\\n}\\n\\n.divExportBtn {\\n   margin-top: 60px;\\n}\\n\\n.optionsDiv {\\n   margin-top: 10px;\\n}\\n\\n.optionsLabel {\\n   padding-left: 10px;\\n   margin-bottom: 10px;\\n}\\n\\n.spanOption{\\n   margin-left: 15px;\\n   font-weight: 400;\\n}\\n\\n.optionsList {\\n   margin-top: 10px;\\n   list-style: none;\\n}\\n\\n.btnBlock {\\n   margin-top: 30px;\\n}\\n\\n#multipleDataSets{\\n   margin-bottom: 20px;\\n}\\n\\n.btnGroupSwitch {\\n   padding-left:32px; \\n   padding-right:32px;\\n}\\n\\n\\nli {\\n   margin-bottom: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/graphs/graphs.component.css\n// module id = 590\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".margin-top-5 {\\n   margin-top: 5px;\\n}\\n\\n.margin-top-20 {\\n   margin-top: 20px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/home/home.component.css\n// module id = 591\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".spanOption{\\n   margin-left: 15px;\\n   font-weight: 400;\\n}\\n\\n.spanQuestionText{\\n   margin-left:5px\\n}\\n\\n.spanQuestion{\\n   font-weight: 600;\\n   font-size: 14px;\\n}\\n\\n.btnBar{\\n   padding-left: 15px;\\n   padding-right: 15px;\\n   padding-top: 15px;\\n}\\n\\n#surveySelect{\\n   width: 300px;\\n}\\n\\n#ctr {\\n   margin-left: 7%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/input/input.component.css\n// module id = 592\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"* {\\n    box-sizing: border-box;\\n  }\\n  \\n  body {\\n    padding: 0;\\n    margin: 0;\\n  }\\n  \\n  #notfound {\\n    position: relative;\\n    height: 100vh;\\n    background-color: #fafbfd;\\n  }\\n  \\n  #notfound .notfound {\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    transform: translate(-50%, -50%);\\n  }\\n  \\n  .notfound {\\n    max-width: 520px;\\n    width: 100%;\\n    text-align: center;\\n  }\\n  \\n  .notfound .notfound-bg {\\n    position: absolute;\\n    left: 0px;\\n    right: 0px;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    z-index: -1;\\n  }\\n  \\n  .notfound .notfound-bg > div {\\n    width: 100%;\\n    background: #fff;\\n    border-radius: 90px;\\n    height: 125px;\\n  }\\n  \\n  .notfound .notfound-bg > div:nth-child(1) {\\n    box-shadow: 5px 5px 0px 0px #f3f3f3;\\n  }\\n  \\n  .notfound .notfound-bg > div:nth-child(2) {\\n    transform: scale(1.3);\\n    box-shadow: 5px 5px 0px 0px #f3f3f3;\\n    position: relative;\\n    z-index: 10;\\n  }\\n  \\n  .notfound .notfound-bg > div:nth-child(3) {\\n    box-shadow: 5px 5px 0px 0px #f3f3f3;\\n    position: relative;\\n    z-index: 90;\\n  }\\n  \\n  .notfound h1 {\\n    font-family: 'Quicksand', sans-serif;\\n    font-size: 86px;\\n    text-transform: uppercase;\\n    font-weight: 700;\\n    margin-top: 0;\\n    margin-bottom: 8px;\\n    color: #151515;\\n  }\\n  \\n  .notfound h2 {\\n    font-family: 'Quicksand', sans-serif;\\n    font-size: 26px;\\n    margin: 0;\\n    font-weight: 700;\\n    color: #151515;\\n  }\\n  \\n  .notfound a {\\n    font-family: 'Quicksand', sans-serif;\\n    font-size: 14px;\\n    text-decoration: none;\\n    text-transform: uppercase;\\n    background: #18e06f;\\n    display: inline-block;\\n    padding: 15px 30px;\\n    border-radius: 5px;\\n    color: #fff;\\n    font-weight: 700;\\n    margin-top: 20px;\\n  }\\n  \\n  @media only screen and (max-width: 767px) {\\n      .notfound .notfound-bg {\\n        width: 287px;\\n        margin: auto;\\n      }\\n  \\n      .notfound .notfound-bg > div {\\n        height: 85px;\\n    }\\n  }\\n  \\n  @media only screen and (max-width: 480px) {\\n    .notfound h1 {\\n      font-size: 68px;\\n    }\\n  \\n    .notfound h2 {\\n      font-size: 18px;\\n    }\\n  }\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/not-found/not-found.component.css\n// module id = 593\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".header {\\n    color: #36A0FF;\\n    font-size: 27px;\\n    padding: 10px;\\n}\\n\\n.header2 {\\n    font-size: 20px;\\n}\\n\\n.header3 {\\n    color: #36A0FF;\\n    font-size: 15px;\\n    padding: 10px;\\n    margin-bottom:30px;\\n}\\n\\n.pages{\\n    margin-left:290px;\\n}\\n\\n.pageNumbers {\\n    list-style-type: none;\\n    display:inline;\\n}\\n\\n.custom-pagination{\\n    display:inline-block;\\n}\\n\\n.pagination{\\n    display: inline;\\n}\\n\\n.pageNumberActive {\\n    color: black;\\n    list-style-type: none;\\n    display:inline;\\n}\\n\\n.inline {\\n    display:inline-block;\\n    margin-right:5px;\\n}\\n\\n.container-fluid{\\n    width:100%;    \\n}\\n\\n.container{\\n    height: 100%;\\n    margin: 0 auto;\\n}\\n\\n.container2 {\\n    height: 90%;\\n}\\n\\n#bucket{ \\n    margin-left: auto;\\n    margin-right: auto;\\n    text-align: center;\\n    float: none;\\n    padding-top: 1%;\\n}\\n\\n#dropdownStyle{\\n    float: none;\\n    margin: auto 0;\\n}\\n\\n.bigicon {\\n    font-size: 35px;\\n    color: #36A0FF;\\n}\\n\\n#btn{\\n    margin-top: 1%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/survey/survey.component.css\n// module id = 594\n// module chunks = 1","var map = {\n\t\"./af\": 214,\n\t\"./af.js\": 214,\n\t\"./ar\": 221,\n\t\"./ar-dz\": 215,\n\t\"./ar-dz.js\": 215,\n\t\"./ar-kw\": 216,\n\t\"./ar-kw.js\": 216,\n\t\"./ar-ly\": 217,\n\t\"./ar-ly.js\": 217,\n\t\"./ar-ma\": 218,\n\t\"./ar-ma.js\": 218,\n\t\"./ar-sa\": 219,\n\t\"./ar-sa.js\": 219,\n\t\"./ar-tn\": 220,\n\t\"./ar-tn.js\": 220,\n\t\"./ar.js\": 221,\n\t\"./az\": 222,\n\t\"./az.js\": 222,\n\t\"./be\": 223,\n\t\"./be.js\": 223,\n\t\"./bg\": 224,\n\t\"./bg.js\": 224,\n\t\"./bm\": 225,\n\t\"./bm.js\": 225,\n\t\"./bn\": 226,\n\t\"./bn.js\": 226,\n\t\"./bo\": 227,\n\t\"./bo.js\": 227,\n\t\"./br\": 228,\n\t\"./br.js\": 228,\n\t\"./bs\": 229,\n\t\"./bs.js\": 229,\n\t\"./ca\": 230,\n\t\"./ca.js\": 230,\n\t\"./cs\": 231,\n\t\"./cs.js\": 231,\n\t\"./cv\": 232,\n\t\"./cv.js\": 232,\n\t\"./cy\": 233,\n\t\"./cy.js\": 233,\n\t\"./da\": 234,\n\t\"./da.js\": 234,\n\t\"./de\": 237,\n\t\"./de-at\": 235,\n\t\"./de-at.js\": 235,\n\t\"./de-ch\": 236,\n\t\"./de-ch.js\": 236,\n\t\"./de.js\": 237,\n\t\"./dv\": 238,\n\t\"./dv.js\": 238,\n\t\"./el\": 239,\n\t\"./el.js\": 239,\n\t\"./en-au\": 240,\n\t\"./en-au.js\": 240,\n\t\"./en-ca\": 241,\n\t\"./en-ca.js\": 241,\n\t\"./en-gb\": 242,\n\t\"./en-gb.js\": 242,\n\t\"./en-ie\": 243,\n\t\"./en-ie.js\": 243,\n\t\"./en-il\": 244,\n\t\"./en-il.js\": 244,\n\t\"./en-nz\": 245,\n\t\"./en-nz.js\": 245,\n\t\"./eo\": 246,\n\t\"./eo.js\": 246,\n\t\"./es\": 249,\n\t\"./es-do\": 247,\n\t\"./es-do.js\": 247,\n\t\"./es-us\": 248,\n\t\"./es-us.js\": 248,\n\t\"./es.js\": 249,\n\t\"./et\": 250,\n\t\"./et.js\": 250,\n\t\"./eu\": 251,\n\t\"./eu.js\": 251,\n\t\"./fa\": 252,\n\t\"./fa.js\": 252,\n\t\"./fi\": 253,\n\t\"./fi.js\": 253,\n\t\"./fo\": 254,\n\t\"./fo.js\": 254,\n\t\"./fr\": 257,\n\t\"./fr-ca\": 255,\n\t\"./fr-ca.js\": 255,\n\t\"./fr-ch\": 256,\n\t\"./fr-ch.js\": 256,\n\t\"./fr.js\": 257,\n\t\"./fy\": 258,\n\t\"./fy.js\": 258,\n\t\"./gd\": 259,\n\t\"./gd.js\": 259,\n\t\"./gl\": 260,\n\t\"./gl.js\": 260,\n\t\"./gom-latn\": 261,\n\t\"./gom-latn.js\": 261,\n\t\"./gu\": 262,\n\t\"./gu.js\": 262,\n\t\"./he\": 263,\n\t\"./he.js\": 263,\n\t\"./hi\": 264,\n\t\"./hi.js\": 264,\n\t\"./hr\": 265,\n\t\"./hr.js\": 265,\n\t\"./hu\": 266,\n\t\"./hu.js\": 266,\n\t\"./hy-am\": 267,\n\t\"./hy-am.js\": 267,\n\t\"./id\": 268,\n\t\"./id.js\": 268,\n\t\"./is\": 269,\n\t\"./is.js\": 269,\n\t\"./it\": 270,\n\t\"./it.js\": 270,\n\t\"./ja\": 271,\n\t\"./ja.js\": 271,\n\t\"./jv\": 272,\n\t\"./jv.js\": 272,\n\t\"./ka\": 273,\n\t\"./ka.js\": 273,\n\t\"./kk\": 274,\n\t\"./kk.js\": 274,\n\t\"./km\": 275,\n\t\"./km.js\": 275,\n\t\"./kn\": 276,\n\t\"./kn.js\": 276,\n\t\"./ko\": 277,\n\t\"./ko.js\": 277,\n\t\"./ky\": 278,\n\t\"./ky.js\": 278,\n\t\"./lb\": 279,\n\t\"./lb.js\": 279,\n\t\"./lo\": 280,\n\t\"./lo.js\": 280,\n\t\"./lt\": 281,\n\t\"./lt.js\": 281,\n\t\"./lv\": 282,\n\t\"./lv.js\": 282,\n\t\"./me\": 283,\n\t\"./me.js\": 283,\n\t\"./mi\": 284,\n\t\"./mi.js\": 284,\n\t\"./mk\": 285,\n\t\"./mk.js\": 285,\n\t\"./ml\": 286,\n\t\"./ml.js\": 286,\n\t\"./mn\": 287,\n\t\"./mn.js\": 287,\n\t\"./mr\": 288,\n\t\"./mr.js\": 288,\n\t\"./ms\": 290,\n\t\"./ms-my\": 289,\n\t\"./ms-my.js\": 289,\n\t\"./ms.js\": 290,\n\t\"./mt\": 291,\n\t\"./mt.js\": 291,\n\t\"./my\": 292,\n\t\"./my.js\": 292,\n\t\"./nb\": 293,\n\t\"./nb.js\": 293,\n\t\"./ne\": 294,\n\t\"./ne.js\": 294,\n\t\"./nl\": 296,\n\t\"./nl-be\": 295,\n\t\"./nl-be.js\": 295,\n\t\"./nl.js\": 296,\n\t\"./nn\": 297,\n\t\"./nn.js\": 297,\n\t\"./pa-in\": 298,\n\t\"./pa-in.js\": 298,\n\t\"./pl\": 299,\n\t\"./pl.js\": 299,\n\t\"./pt\": 301,\n\t\"./pt-br\": 300,\n\t\"./pt-br.js\": 300,\n\t\"./pt.js\": 301,\n\t\"./ro\": 302,\n\t\"./ro.js\": 302,\n\t\"./ru\": 303,\n\t\"./ru.js\": 303,\n\t\"./sd\": 304,\n\t\"./sd.js\": 304,\n\t\"./se\": 305,\n\t\"./se.js\": 305,\n\t\"./si\": 306,\n\t\"./si.js\": 306,\n\t\"./sk\": 307,\n\t\"./sk.js\": 307,\n\t\"./sl\": 308,\n\t\"./sl.js\": 308,\n\t\"./sq\": 309,\n\t\"./sq.js\": 309,\n\t\"./sr\": 311,\n\t\"./sr-cyrl\": 310,\n\t\"./sr-cyrl.js\": 310,\n\t\"./sr.js\": 311,\n\t\"./ss\": 312,\n\t\"./ss.js\": 312,\n\t\"./sv\": 313,\n\t\"./sv.js\": 313,\n\t\"./sw\": 314,\n\t\"./sw.js\": 314,\n\t\"./ta\": 315,\n\t\"./ta.js\": 315,\n\t\"./te\": 316,\n\t\"./te.js\": 316,\n\t\"./tet\": 317,\n\t\"./tet.js\": 317,\n\t\"./tg\": 318,\n\t\"./tg.js\": 318,\n\t\"./th\": 319,\n\t\"./th.js\": 319,\n\t\"./tl-ph\": 320,\n\t\"./tl-ph.js\": 320,\n\t\"./tlh\": 321,\n\t\"./tlh.js\": 321,\n\t\"./tr\": 322,\n\t\"./tr.js\": 322,\n\t\"./tzl\": 323,\n\t\"./tzl.js\": 323,\n\t\"./tzm\": 325,\n\t\"./tzm-latn\": 324,\n\t\"./tzm-latn.js\": 324,\n\t\"./tzm.js\": 325,\n\t\"./ug-cn\": 326,\n\t\"./ug-cn.js\": 326,\n\t\"./uk\": 327,\n\t\"./uk.js\": 327,\n\t\"./ur\": 328,\n\t\"./ur.js\": 328,\n\t\"./uz\": 330,\n\t\"./uz-latn\": 329,\n\t\"./uz-latn.js\": 329,\n\t\"./uz.js\": 330,\n\t\"./vi\": 331,\n\t\"./vi.js\": 331,\n\t\"./x-pseudo\": 332,\n\t\"./x-pseudo.js\": 332,\n\t\"./yo\": 333,\n\t\"./yo.js\": 333,\n\t\"./zh-cn\": 334,\n\t\"./zh-cn.js\": 334,\n\t\"./zh-hk\": 335,\n\t\"./zh-hk.js\": 335,\n\t\"./zh-tw\": 336,\n\t\"./zh-tw.js\": 336\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 616;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 616\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 628\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\">\\n    <div class=\\\"sidebar-collapse\\\">\\n        <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\n            <li class=\\\"nav-header\\\">\\n                <div class=\\\"dropdown profile-element\\\">\\n                    <span>\\n                        <img alt=\\\"image\\\" class=\\\"img-rectangle\\\" width=\\\"165px\\\"\\n                             src=\\\"./assets/img/dutchess-cap.png\\\" />\\n                    </span>\\n                </div>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('home')}\\\">\\n                <a [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> <span class=\\\"nav-label\\\">Home</span></a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('graphs')}\\\">\\n               <a [routerLink]=\\\"['/graphs']\\\"><i class=\\\"fas fa-chart-line\\\"></i> <span class=\\\"nav-label\\\">Graph Designer</span></a>\\n           </li>\\n            <li [ngClass]=\\\"{active: activeRoute('input')}\\\">\\n                <a [routerLink]=\\\"['/input']\\\"><i class=\\\"fas fa-user-edit\\\"></i> <span class=\\\"nav-label\\\">Input Survey Manually</span></a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('exportRaw')}\\\">\\n                <a [routerLink]=\\\"['/exportRaw']\\\"><i class=\\\"fas fa-table\\\"></i> <span class=\\\"nav-label\\\">Query/Export Data</span></a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('edit')}\\\">\\n                  <a [routerLink]=\\\"['/edit']\\\"><i class=\\\"fas fa-edit\\\"></i> <span class=\\\"nav-label\\\">Edit Survey</span></a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navigation/navigation.component.html\n// module id = 629\n// module chunks = 1","module.exports = \"<div class=\\\"row border-bottom\\\">\\n    <div id=\\\"topNavBar\\\">\\n        <nav class=\\\"navbar navbar-static-top white-bg\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n            <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n                <li>\\n                    <a *ngIf=\\\"auth.isAuthenticated()\\\"\\n                    (click)=\\\"auth.logout()\\\" style=\\\"font-size:12px\\\">\\n                        <i class=\\\"fas fa-globe-americas\\\"></i> Return To Survey / Logout\\n                    </a>\\n                </li>\\n            </ul>\\n        </nav>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/topnavbar/topnavbar.component.html\n// module id = 630\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n  <navigation></navigation>\\n  <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n    <topnavbar></topnavbar>\\n    <div id=\\\"ctr\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-10 ibox float-e-margins\\\">\\n          <div class=\\\"ibox-content\\\">\\n            <div class=\\\"row justify-content-between btnBar\\\">\\n               <div class=\\\"col\\\">\\n                  <select class=\\\"form-control pull-left\\\" id=\\\"surveySelect\\\" (change)=\\\"updateSurveyFormData($event.target.value)\\\">\\n                    <option value=\\\"-1\\\" disabled selected>Select survey to edit or create a new one!</option>\\n                    <option *ngFor=\\\"let s of globals.surveys\\\" [value]=\\\"s.survey_id\\\">\\n                      {{ s.survey_name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"col\\\">\\n                  <button type=\\\"button\\\" (click)=\\\"newSurveyForm()\\\" class=\\\"pull-right btn btn-warning btn-sm\\\">Create New Survey</button>\\n                </div>\\n            </div>\\n            <hr>\\n            <div class=\\\"feed-activity-list\\\">\\n              <form [formGroup]=\\\"survey\\\" novalidate (ngSubmit)=\\\"save(survey)\\\">\\n                <div class=\\\"form-group\\\">\\n                  <h2 style=\\\"font-weight:bold\\\">Survey Name</h2>\\n                  <input [readonly]=\\\"setReadOnly()\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"surveyName\\\"\\n                    placeholder=\\\"Enter Survey Name\\\">\\n                </div>\\n                <!-- QUESTIONS -->\\n                <div formArrayName=\\\"questions\\\">\\n                  <div *ngFor=\\\"let question of survey.controls.questions.controls; let i=index\\\">\\n                    <div [formGroupName]=\\\"i\\\" class=\\\"feed-element\\\" style=\\\"margin-bottom:10px\\\">\\n                      <h3> Question {{ i+1}}</h3>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-3\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-lg-12\\\">\\n                              <small class=\\\"text-muted\\\">Question Type</small>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-lg-12\\\">\\n                              <!--TYPE GO HERE-->\\n                              <select formControlName=\\\"questionType\\\" class=\\\"form-control form-control-sm\\\" required>\\n                                <option value=\\\"\\\" disabled selected>Select question type:</option>\\n                                <option value=\\\"dropdown\\\">Dropdown</option>\\n                                <option value=\\\"checkboxes\\\">Checkboxes</option>\\n                                <option value=\\\"mc\\\">Multiple Choice</option>\\n                                <option value=\\\"text\\\">Textbox</option>\\n                              </select>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col-lg-9\\\">\\n                          <button *ngIf=\\\"survey.controls.questions.length > 1\\\" class='pull-right btn btn-lg' (click)='removeQuestion(i)'\\n                            style='background-color:transparent;'>\\n                            <div>\\n                              <i id=\\\"btnQuestionRemove\\\" class=\\\"fas fa-minus-circle\\\"></i>\\n                            </div>\\n                          </button>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\" style=\\\"margin-top:10px\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                          <small class=\\\"text-muted\\\">Question Prompt</small>\\n                          <!--TEXT BOX GOES HERE-->\\n                          <div class=\\\"form-group\\\">\\n                            <textarea formControlName=\\\"questionText\\\" class=\\\"form-control\\\" id=\\\"exampleTextarea\\\" rows=\\\"2\\\"\\n                              placeholder=\\\"Enter Question Prompt Here...\\\"></textarea>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\" *ngIf=\\\"showOptionsDiv(question)\\\">\\n                        <div class=\\\"col-lg-1\\\">\\n                        </div>\\n                        <div class=\\\"col-lg-5\\\">\\n                          <!--OPTIONS GO HERE-->\\n                          <div>\\n                            <!-- SHOWING OPTIONS-->\\n                            <small class=\\\"text-muted\\\">Add Options</small>\\n                            <div formArrayName=\\\"questionOptions\\\" *ngFor=\\\"let option of survey.controls.questions.controls[i].controls.questionOptions.controls; let j=index\\\">\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-10\\\">\\n                                  <div [formGroupName]=\\\"j\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Option\\\"\\n                                        formControlName=\\\"option\\\">\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                  <span *ngIf=\\\"question.controls.questionOptions.length > 1\\\" (click)=\\\"removeOption(question, j)\\\"><i\\n                                      class=\\\"fas fa-trash-alt\\\"></i></span>\\n                                </div>\\n                              </div>\\n                              <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm pull-right\\\" *ngIf=\\\"j == question.controls.questionOptions.length-1\\\"\\n                                (click)=\\\"addOption(question)\\\" style=\\\"float: right\\\"><i class=\\\"fa fa-plus-circle\\\"></i>\\n                                Add Option</button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                          <button class='pull-right btn btn-lg' (click)='addQuestion(i)' style='background-color:transparent;'>\\n                            <div>\\n                              <i id=\\\"btnQuestionAdd\\\" class=\\\"fa fa-plus-circle\\\"></i>\\n                            </div>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <!--END OF FEED ELEMENT DIV-  -->\\n                  </div>\\n                  <!--END OF nfFor DIV-->\\n                </div>\\n                <!--END OF Form Array for Questions Div-->\\n              </form>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Save Survey</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/edit/edit.component.html\n// module id = 631\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n    <navigation></navigation>\\n    <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n        <topnavbar></topnavbar>\\n\\n        <div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n          <div class=\\\"row\\\" style=\\\"margin-top:30px\\\">\\n\\n            <div class=\\\"col-lg-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlSelect1\\\">Survey</label>\\n                <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" (change)=\\\"updateSurvey($event.target.value)\\\">\\n                  <option *ngFor=\\\"let survey of globals.surveys\\\" value=\\\"{{survey.survey_id}}\\\">\\n                    {{ survey.survey_name }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-5\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlSelect1\\\">Survey Question</label>\\n                <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" (change)=\\\"updateDataFeed($event.target.value)\\\">\\n                  <option value=\\\"-1\\\">All Questions</option>\\n                  <option *ngFor=\\\"let question of getQuestions()\\\" value=\\\"{{ question.question_id }}\\\">\\n                    {{ question.question_text}}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlSelect1\\\">As of Date</label>\\n                <input class=\\\"form-control\\\" type=\\\"date\\\" value=\\\"{{ dateFilter }}\\\" (change)=\\\"updateDate($event.target.value)\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-2\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block btn-sm btnExport\\\" (click)=\\\"exportTableToCSV('table.csv')\\\"><i\\n                  class=\\\"fas fa-download\\\"></i> Export Table</button>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row divSearchRow\\\">\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Filter Responses By Keyword\\\">\\n                <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                    <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row \\\">\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <table id=\\\"tableResponses\\\" class=\\\"table table-hover table-sm\\\">\\n                <thead>\\n                  <tr>\\n                    <th class=\\\"colQuestions\\\">Question</th>\\n                    <th class=\\\"colResponses\\\">Response</th>\\n                    <th class=\\\"colDates\\\">Date Submitted</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let response of dataFeed | filter: searchText | filterByDate: dateFilter\\\">\\n                    <th> {{ response.question }} </th>\\n                    <td> {{ response.response }}</td>\\n                    <td class=\\\"colDates\\\"> {{ response.date }}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n\\n          </div> \\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/exportRaw/exportRaw.component.html\n// module id = 632\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n  <navigation></navigation>\\n  <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n    <topnavbar></topnavbar>\\n\\n    <div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-lg-3\\\"style=\\\"margin-bottom: 500px\\\">\\n          <br>\\n          <form [formGroup]=\\\"chartForm\\\">\\n            <div class=\\\"form-group\\\">\\n\\n              <div class=\\\"filterBlock\\\">\\n                <label for=\\\"deepGraphSwitch\\\">Data Set Modeling Switch</label>\\n                <div class=\\\"btn-group w-100\\\" id=\\\"deepGraphSwitch\\\" role=\\\"group\\\" (click)=\\\"updateMultipleDataSetForm($event.target.value)\\\">\\n                  <button [disabled]=\\\"buttonStateSingle()\\\" type=\\\"button\\\" value=\\\"single\\\" class=\\\"btnGroupSwitch btn btn-success\\\">Single</button>\\n                  <button [disabled]=\\\"buttonStateMultiple()\\\" type=\\\"button\\\" value=\\\"multiple\\\" class=\\\"btnGroupSwitch btn btn-success\\\">Double</button>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"filterBlock\\\">\\n                <label for=\\\"graphType\\\">Chart Type</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"chartType\\\" (change)=\\\"updateChart()\\\" required>\\n                  <option *ngFor=\\\"let graph of graphService.getGraphTypes()\\\" [value]=\\\"graph.val\\\">\\n                    {{graph.view}}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <div class=\\\"filterBlock\\\">\\n                <label for=\\\"graphType\\\">Select Survey</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"surveyId\\\" required>\\n                  <option *ngFor=\\\"let survey of globals.surveys\\\" [value]=\\\"survey.survey_id\\\">\\n                    {{survey.survey_name}}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <div class=\\\"filterBlock\\\">\\n                <label for=\\\"graphType\\\">Select Question</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"questionId\\\" (change)=\\\"updateChart()\\\" required>\\n                  <option *ngFor=\\\"let question of globals.surveys[chartForm.controls.surveyId.value].questions | GraphableQuestion\\\"\\n                    [value]=\\\"question.question_id\\\">\\n                    {{question.question_text}}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <div id=\\\"multipleDataSets\\\" *ngIf=\\\"currentDatasetType != 'single'\\\">\\n                <div class=\\\"filterBlock\\\">\\n                  <label for=\\\"graphType\\\">Select Sub Question</label>\\n                  <select class=\\\"form-control\\\" formControlName=\\\"subQuestionId\\\" required (change)=\\\"updateChart()\\\">\\n                    <option *ngFor=\\\"let question of globals.surveys[chartForm.controls.surveyId.value].questions | ExceptQuestionId: chartForm.controls.questionId.value | GraphableQuestion\\\"\\n                      [value]=\\\"question.question_id\\\">\\n                      {{question.question_text}}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"optionsDiv\\\">\\n                  <form [formGroup]=\\\"optionsForm\\\" (change)=\\\"updateChart()\\\">\\n                    <small class=\\\"optionsLabel text-muted\\\">Sub Question Data Filter</small>\\n                    <ul class=\\\"optionsList\\\" formArrayName=\\\"options\\\" *ngFor=\\\"let option of getSubQuestionOptions(); let i = index\\\">\\n                      <div class=\\\"col-lg-12\\\">\\n                         <li>\\n                           <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n                           <span class=\\\"spanOption\\\">{{option.option_text}}</span>\\n                        </li>\\n                      </div>\\n                     </ul>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"btnBlock\\\">\\n               <hr>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block btn-sm\\\">\\n                  <a href=\\\"graphs\\\" (click)=\\\"download($event)\\\" style=\\\"color:white\\\">\\n                    <i class=\\\"fas fa-download\\\"></i>\\n                    Export Graph\\n                  </a>\\n                </button>\\n              </div>\\n\\n            </div>\\n          </form>\\n        </div>\\n\\n        <div class=\\\"col-lg-8\\\">\\n          <canvas id=\\\"graphCanvas\\\" width=\\\"670\\\" height=\\\"670\\\"></canvas>\\n        </div>\\n\\n        <div class=\\\"col-lg-1\\\">\\n\\n        </div>\\n\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/graphs/graphs.component.html\n// module id = 633\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n  <navigation></navigation>\\n  <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n    <topnavbar></topnavbar>\\n    <div class=\\\"col-lg-3 margin-top-20\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"ibox-title\\\">\\n          <h5>Survey Details</h5>\\n        </div>\\n        <div class=\\\"ibox-content\\\">\\n          <div class=\\\"feed-activity-list\\\">\\n            <div *ngFor=\\\"let info of getSurveyInfo()\\\">\\n               <div class=\\\"feed-element margin-top-5\\\">\\n                <span *ngIf=\\\"info.status\\\" class=\\\"label label-primary pull-right\\\">Active</span>\\n                <span *ngIf=\\\"! info.status\\\" class=\\\"label label-warning pull-right\\\">Inactive</span>\\n                <strong>{{info.name}}</strong>\\n                <div class=\\\"margin-top-5\\\">\\n                  <div> Date Created: <small class=\\\"text-muted pull-right\\\">{{info.date}}</small></div>\\n                  <div> Submissions: <small class=\\\"text-muted pull-right\\\">{{info.submissions}}</small></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/home/home.component.html\n// module id = 634\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n      <navigation></navigation>\\n      <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n        <topnavbar></topnavbar>\\n        <div id=\\\"ctr\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-11 ibox float-e-margins\\\">\\n              <div class=\\\"ibox-content\\\">\\n                <div class=\\\"row justify-content-between btnBar\\\">\\n                  <div class=\\\"col\\\">\\n                    <select class=\\\"form-control pull-left\\\" id=\\\"surveySelect\\\" (change)=\\\"updateSurvey($event.target.value)\\\">\\n                      <option *ngFor=\\\"let s of globals.surveys\\\" [value]=\\\"s.survey_id\\\">\\n                        {{ s.survey_name }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right btn-sm\\\">\\n                      <i class=\\\"fas fa-database\\\"></i>\\n                      Add to Database\\n                    </button>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"feed-activity-list\\\">\\n                  <form>\\n                    <div class=\\\"row form-group\\\" *ngFor=\\\"let question of survey.questions | ActiveQuestions; let i = index \\\">\\n                      <div class=\\\"col-lg-4\\\" style=\\\"margin-left:40px\\\">\\n                        <span class=\\\"spanQuestion\\\"> {{ i+1 }} . <span class=\\\"spanQuestionText\\\">{{ question.question_text }}</span></span>\\n                      </div>\\n                      <div class=\\\"col-lg-7\\\">\\n                        <div [ngSwitch]=\\\"question.question_type\\\">\\n    \\n                          <div *ngSwitchCase=\\\"'dropdown'\\\">\\n                            <select class=\\\"form-control\\\" id=\\\"questionType\\\">\\n                              <option *ngFor=\\\"let option of question.options\\\">\\n                                {{ option.option_text }}\\n                              </option>\\n                            </select>\\n                          </div>\\n                          <div *ngSwitchCase=\\\"'checkboxes'\\\">\\n                            <div *ngFor=\\\"let option of question.options\\\" id=\\\"divCheckboxOptionText\\\">\\n                              <label class=\\\"form-check-label\\\">\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"option.option_text\\\">\\n                                <span class=\\\"spanOption\\\">{{ option.option_text }}</span>\\n                              </label>\\n                            </div>\\n                          </div>\\n                          <div *ngSwitchCase=\\\"'text'\\\">\\n                            <label class=\\\"form-check-label\\\"></label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"textArea\\\" rows=\\\"3\\\"></textarea>\\n                          </div>\\n                          <div *ngSwitchCase=\\\"'mc'\\\">\\n                            <div *ngFor=\\\"let option of question.options\\\">\\n                              <label class=\\\"check-label\\\">\\n                                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\">\\n                                <span class=\\\"spanOption\\\">{{ option.option_text }}</span>\\n                              </label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/input/input.component.html\n// module id = 635\n// module chunks = 1","module.exports = \"<div id=\\\"notfound\\\">\\n\\t<div class=\\\"notfound\\\">\\n\\t\\t<div class=\\\"notfound-bg\\\">\\n\\t\\t\\t<div></div>\\n\\t\\t\\t<div></div>\\n\\t\\t\\t<div></div>\\n\\t\\t</div>\\n\\t\\t<h1>oops!</h1>\\n\\t\\t<h2>Error 404 : Page Not Found</h2>\\n\\t\\t<a href=\\\"#\\\">go back</a>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/not-found/not-found.component.html\n// module id = 636\n// module chunks = 1","module.exports = \"<!-- Survey Landing/Home page -->\\n<div class=\\\"container2\\\" *ngIf=\\\"!isLanding\\\" style=\\\"margin: 0 auto\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-7\\\" id=\\\"bucket\\\" >\\n            <div class=\\\"well well-sm\\\">\\n                <legend class=\\\"text-center header\\\">Welcome to Dutchess CAP</legend>\\n                <p class=\\\"text-center header3\\\">Please select the survey you would like to take:</p>\\n               \\n                <form class=\\\"form-horizontal\\\" method=\\\"post\\\" #start=\\\"ngForm\\\" validate>\\n\\n                    <select class=\\\"form-control\\\" id=\\\"select\\\" (change)=\\\"surveySelect($event, $event.target.value)\\\">\\n                        <option disabled selected>-Please Select an Option-</option>\\n                        <option *ngFor=\\\"let surveyActive of surveys\\\" value=\\\"{{surveyActive.survey_id}}\\\">{{surveyActive.survey_name}}</option>\\n                    </select>\\n                    \\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"col-md-12 text-center\\\">\\n                            <button type=\\\"submit\\\" id=\\\"btn\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"onStart()\\\">Start</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Actual survey with questions -->\\n<div class=\\\"container\\\">\\n    <button\\n    *ngIf=\\\"!auth.isAuthenticated()\\\" (click)=\\\"auth.login()\\\">Login</button>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\" id=\\\"bucket\\\">\\n        <div class=\\\"well well-sm\\\">\\n          <div *ngFor=\\\"let survey of surveys | filterBySurveyID: selectedSurveyId; let j = index\\\">\\n            <div *ngFor=\\\"let question of survey.questions | paginate: config\\\">\\n              <form class=\\\"form-horiziontal\\\">\\n                <fieldset>\\n  \\n                  <legend class=\\\"text-center header\\\">{{ survey.survey_name }}</legend>\\n  \\n                  <div class=\\\"text-center header2\\\">\\n                    <h3> {{ question.question_id }}. {{ question.question_text}} </h3>\\n                  </div>\\n                  <div [ngSwitch]=\\\"question.question_type\\\" style=\\\"height:150px\\\">\\n  \\n                    <div class=\\\"form-group\\\" id=\\\"dropdownStyle\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div *ngSwitchCase=\\\"'dropdown'\\\">\\n                          <select class=\\\"form-control\\\" id=\\\"select\\\" [(ngModel)]=\\\"selectedOptionId\\\" name=\\\"selectedOption\\\"\\n                            (change)=\\\"optionSelect($event, $event.target.value, 'dropdown')\\\">\\n                            <option disabled selected>-Please Select an Option-</option>\\n                            <option *ngFor=\\\"let option of question.options\\\" value=\\\"{{option.option_id}}\\\">\\n                              {{ option.option_text }}\\n                            </option>\\n                          </select>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-check\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div *ngSwitchCase=\\\"'checkboxes'\\\">\\n                          <div *ngFor=\\\"let option of question.options\\\" class=\\\"form-check-label\\\" id=\\\"divCheckboxOptionText\\\"\\n                            (change)=\\\"optionSelect($event, $event.target.value, 'checkboxes')\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"{{option.option_id}}\\\">\\n                            {{ option.option_text }}\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div *ngSwitchCase=\\\"'text'\\\">\\n                          <div class=\\\"form-check-label\\\">\\n                            <textarea class=\\\"form-control\\\" name=\\\"text\\\" rows=\\\"2\\\" [(ngModel)]=\\\"textAreaValue\\\"></textarea>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div *ngSwitchCase=\\\"'mc'\\\">\\n                          <div *ngFor=\\\"let option of question.options\\\" id=\\\"radioBoxOptionText\\\" (change)=\\\"optionSelect($event, $event.target.value, 'mc')\\\">\\n                            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"question.question_id\\\" value=\\\"{{option.option_id}}\\\">\\n                            {{ option.option_text }}\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                  </div>\\n                  <pagination-template #p=\\\"paginationApi\\\" [id]=\\\"config.id\\\" (pageChange)=\\\"config.currentPage = $event\\\">\\n                    <div class=\\\"custom-pagination\\\">\\n                      <ul>\\n                        <span class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\">\\n                          <button class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"!p.isFirstPage()\\\" (click)=\\\"removeResponse(getQuestionIndex(question.question_id, p.getCurrent())); p.previous();\\\">\\n                            Previous </button>\\n                          </span>\\n  \\n                        <span *ngFor=\\\"let page of p.pages\\\" [class.current]=\\\"p.getCurrent() === page.value\\\">\\n                          <li class=\\\"pageNumbers\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                            <a style=\\\"font-size: 15px; color: grey\\\">{{ page.label }}</a>\\n                          </li>\\n                          <li class=\\\"pageNumberActive\\\" *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                            <a style=\\\"font-size: 15px; color: grey\\\">{{ page.label }}</a>\\n                          </li>\\n                        </span>\\n  \\n                        <span class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\">\\n                          <button class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"updateResponses(textAreaValue, getQuestionIndex(question.question_id)); p.next()\\\">\\n                            Next </button>\\n                          <button class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"p.isLastPage()\\\" (click)=\\\"updateResponses(textAreaValue, getQuestionIndex(question.question_id)); postOnSubmit();\\\">\\n                            Submit </button>\\n                          </span>\\n                      </ul>\\n                    </div>\\n                  </pagination-template>\\n                </fieldset>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/survey/survey.component.html\n// module id = 637\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Auth0Lock from 'auth0-lock';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthenticationService {\n  // https://dutchesscapp.auth0.com/\n  auth0Options = {\n      theme: {\n          primaryColor: '#DFA612'\n      },\n      auth: {\n        redirectUrl: 'http://localhost:4200/home',\n        responseType: 'token id_token',\n        audience: `https://dutchesscap.auth0.com/userinfo`,\n        params: {\n          scope: 'openid profile email'\n        }\n      },\n      autoclose: true,\n      oidcConformant: true,\n  };\n    \n  lock = new Auth0Lock(\n      'Om122xNAJ4dyh43gPnuJpLfgQMZhpNFp',\n      'dutchesscap.auth0.com',\n      this.auth0Options\n  );\n\n  constructor(private router: Router) {\n    this.lock.on('authenticated', (authResult: any) => {\n        this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n            if (error) {\n              throw new Error(error);\n            }\n        \n            localStorage.setItem('token', authResult.idToken);\n            localStorage.setItem('profile', JSON.stringify(profile));\n            this.router.navigate(['/']);\n        });\n    });\n  }\n\n  // When called, produce the lock modal that allows authentication\n  login() {\n    this.lock.show();\n  }\n\n  // Remove the localStorage tokens and navigate to the survey page\n  logout() {\n    localStorage.removeItem('profile');\n    localStorage.removeItem('token');\n    this.router.navigate(['survey']);\n  }\n\n  // Checks if the token has expired / if it exists\n  isAuthenticated() {\n    return tokenNotExpired();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/authentication.service.ts"],"sourceRoot":""}